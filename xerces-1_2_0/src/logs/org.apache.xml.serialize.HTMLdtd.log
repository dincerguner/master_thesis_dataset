1:EVR:<OR(int)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd:147:16 | ONLY_OPENING |==> 0
2:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isEmptyTag(java.lang.String):195:isElement(tagName, EMPTY) |==> false
3:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isElementContent(java.lang.String):209:isElement(tagName, ELEM_CONTENT) |==> false
4:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isPreserveSpace(java.lang.String):223:isElement(tagName, PRESERVE) |==> false
5:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isOptionalClosing(java.lang.String):237:isElement(tagName, OPT_CLOSING) |==> false
6:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isOnlyOpening(java.lang.String):250:isElement(tagName, ONLY_OPENING) |==> false
7:COR:openTag.equalsIgnoreCase("HEAD"):TRUE:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):267:openTag.equalsIgnoreCase("HEAD") |==> false
8:COR:openTag.equalsIgnoreCase("HEAD"):FALSE:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):267:openTag.equalsIgnoreCase("HEAD") |==> true
9:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):268:return !isElement(tagName, ALLOWED_HEAD); |==> <NO-OP>
10:COR:openTag.equalsIgnoreCase("P"):TRUE:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):270:openTag.equalsIgnoreCase("P") |==> false
11:COR:openTag.equalsIgnoreCase("P"):FALSE:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):270:openTag.equalsIgnoreCase("P") |==> true
12:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):271:return isElement(tagName, CLOSE_P); |==> <NO-OP>
13:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):273:openTag.equalsIgnoreCase("DT") || openTag.equalsIgnoreCase("DD") |==> openTag.equalsIgnoreCase("DT") != openTag.equalsIgnoreCase("DD")
14:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):273:openTag.equalsIgnoreCase("DT") || openTag.equalsIgnoreCase("DD") |==> openTag.equalsIgnoreCase("DT")
15:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):273:openTag.equalsIgnoreCase("DT") || openTag.equalsIgnoreCase("DD") |==> openTag.equalsIgnoreCase("DD")
16:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):273:openTag.equalsIgnoreCase("DT") || openTag.equalsIgnoreCase("DD") |==> true
17:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):274:return isElement(tagName, CLOSE_DD_DT); |==> <NO-OP>
18:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):276:openTag.equalsIgnoreCase("LI") || openTag.equalsIgnoreCase("OPTION") |==> openTag.equalsIgnoreCase("LI") != openTag.equalsIgnoreCase("OPTION")
19:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):276:openTag.equalsIgnoreCase("LI") || openTag.equalsIgnoreCase("OPTION") |==> openTag.equalsIgnoreCase("LI")
20:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):276:openTag.equalsIgnoreCase("LI") || openTag.equalsIgnoreCase("OPTION") |==> openTag.equalsIgnoreCase("OPTION")
21:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):276:openTag.equalsIgnoreCase("LI") || openTag.equalsIgnoreCase("OPTION") |==> true
22:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):277:return isElement(tagName, CLOSE_SELF); |==> <NO-OP>
23:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") |==> openTag.equalsIgnoreCase("THEAD") != openTag.equalsIgnoreCase("TFOOT")
24:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") |==> openTag.equalsIgnoreCase("THEAD")
25:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") |==> openTag.equalsIgnoreCase("TFOOT")
26:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") |==> true
27:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") |==> (openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT")) != openTag.equalsIgnoreCase("TBODY")
28:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") |==> openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT")
29:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):280:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") |==> openTag.equalsIgnoreCase("TBODY")
30:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") |==> true
31:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") |==> (openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY")) != openTag.equalsIgnoreCase("TR")
32:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") |==> openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY")
33:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):280:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") |==> openTag.equalsIgnoreCase("TR")
34:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):280:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") |==> true
35:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") || openTag.equalsIgnoreCase("COLGROUP") |==> (openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR")) != openTag.equalsIgnoreCase("COLGROUP")
36:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):279:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") || openTag.equalsIgnoreCase("COLGROUP") |==> openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR")
37:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):281:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") || openTag.equalsIgnoreCase("COLGROUP") |==> openTag.equalsIgnoreCase("COLGROUP")
38:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):280:openTag.equalsIgnoreCase("THEAD") || openTag.equalsIgnoreCase("TFOOT") || openTag.equalsIgnoreCase("TBODY") || openTag.equalsIgnoreCase("TR") || openTag.equalsIgnoreCase("COLGROUP") |==> true
39:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):282:return isElement(tagName, CLOSE_TABLE); |==> <NO-OP>
40:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):284:openTag.equalsIgnoreCase("TH") || openTag.equalsIgnoreCase("TD") |==> openTag.equalsIgnoreCase("TH") != openTag.equalsIgnoreCase("TD")
41:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):284:openTag.equalsIgnoreCase("TH") || openTag.equalsIgnoreCase("TD") |==> openTag.equalsIgnoreCase("TH")
42:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):284:openTag.equalsIgnoreCase("TH") || openTag.equalsIgnoreCase("TD") |==> openTag.equalsIgnoreCase("TD")
43:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):284:openTag.equalsIgnoreCase("TH") || openTag.equalsIgnoreCase("TD") |==> true
44:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):285:return isElement(tagName, CLOSE_TH_TD); |==> <NO-OP>
45:LVR:FALSE:TRUE:org.apache.xml.serialize.HTMLdtd@isClosing(java.lang.String,java.lang.String):286:false |==> true
46:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isURI(java.lang.String,java.lang.String):301:attrName.equalsIgnoreCase("href") || attrName.equalsIgnoreCase("src") |==> attrName.equalsIgnoreCase("href") != attrName.equalsIgnoreCase("src")
47:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isURI(java.lang.String,java.lang.String):301:attrName.equalsIgnoreCase("href") || attrName.equalsIgnoreCase("src") |==> attrName.equalsIgnoreCase("href")
48:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isURI(java.lang.String,java.lang.String):301:attrName.equalsIgnoreCase("href") || attrName.equalsIgnoreCase("src") |==> attrName.equalsIgnoreCase("src")
49:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@isURI(java.lang.String,java.lang.String):301:attrName.equalsIgnoreCase("href") || attrName.equalsIgnoreCase("src") |==> true
50:EVR:<TYPE_CAST(java.lang.String[])>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):317:(String[])_boolAttrs.get(tagName.toUpperCase()) |==> null
51:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):318:attrNames == null |==> false
52:LVR:FALSE:TRUE:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):319:false |==> true
53:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):319:return Config.__M_NO == 0 && Config.COVERED(52, 52) ? false : Config.__M_NO == 52 ? true : false; |==> <NO-OP>
54:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):320:0 |==> 1
55:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):320:0 |==> -1
56:ROR:<(int,int):!=(int,int):org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):320:i < attrNames.length |==> i != attrNames.length
57:ROR:<(int,int):<=(int,int):org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):320:i < attrNames.length |==> i <= attrNames.length
58:ROR:<(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):320:i < attrNames.length |==> false
59:COR:attrNames[i].equalsIgnoreCase(attrName):TRUE:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):321:attrNames[i].equalsIgnoreCase(attrName) |==> false
60:COR:attrNames[i].equalsIgnoreCase(attrName):FALSE:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):321:attrNames[i].equalsIgnoreCase(attrName) |==> true
61:LVR:TRUE:FALSE:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):322:true |==> false
62:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):322:return Config.__M_NO == 0 && Config.COVERED(61, 61) ? true : Config.__M_NO == 61 ? false : true; |==> <NO-OP>
63:LVR:FALSE:TRUE:org.apache.xml.serialize.HTMLdtd@isBoolean(java.lang.String,java.lang.String):323:false |==> true
64:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):339:initialize() |==> <NO-OP>
65:EVR:<METHOD_INVOCATION(java.lang.Object)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):340:_byName.get(name) |==> null
66:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):341:value != null |==> true
67:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):341:value != null && value instanceof Character |==> value != null == value instanceof Character
68:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):341:value != null && value instanceof Character |==> false
69:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):341:value != null && value instanceof Character |==> value != null
70:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):341:value != null && value instanceof Character |==> value instanceof Character
71:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):342:((Character)value).charValue() |==> 0
72:LVR:NEG:0:org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):344:-1 |==> 0
73:LVR:NEG:POS:org.apache.xml.serialize.HTMLdtd@charFromName(java.lang.String):344:-1 |==> 1
74:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@fromChar(char):360:initialize() |==> <NO-OP>
75:EVR:<TYPE_CAST(java.lang.String)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@fromChar(char):361:(String)_byChar.get(String.valueOf(value)) |==> null
76:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@fromChar(char):362:name == null |==> false
77:EVR:<IDENTIFIER(java.lang.String)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@fromChar(char):365:name |==> null
78:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@initialize():386:_byName != null |==> true
79:STD:<RETURN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():387:return; |==> <NO-OP>
80:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():389:_byName = new Hashtable() |==> <NO-OP>
81:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():390:_byChar = new Hashtable() |==> <NO-OP>
82:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():391:is = HTMLdtd.class.getResourceAsStream(ENTITIES_RESOURCE) |==> <NO-OP>
83:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@initialize():392:is == null |==> false
84:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():394:reader = new BufferedReader(new InputStreamReader(is)) |==> <NO-OP>
85:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@initialize():395:reader.readLine() |==> null
86:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@initialize():396:line != null |==> true
87:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@initialize():397:0 |==> 1
88:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@initialize():397:0 |==> -1
89:ROR:==(int,int):<=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 |==> line.length() <= 0
90:ROR:==(int,int):>=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 |==> line.length() >= 0
91:ROR:==(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 |==> false
92:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@initialize():397:0 |==> 1
93:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@initialize():397:0 |==> -1
94:ROR:==(int,int):<=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.charAt(0) == '#' |==> line.charAt(0) <= '#'
95:ROR:==(int,int):>=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.charAt(0) == '#' |==> line.charAt(0) >= '#'
96:ROR:==(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@initialize():397:line.charAt(0) == '#' |==> false
97:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 || line.charAt(0) == '#' |==> line.length() == 0 != (line.charAt(0) == '#')
98:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 || line.charAt(0) == '#' |==> line.length() == 0
99:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 || line.charAt(0) == '#' |==> line.charAt(0) == '#'
100:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.xml.serialize.HTMLdtd@initialize():397:line.length() == 0 || line.charAt(0) == '#' |==> true
101:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():398:line = reader.readLine() |==> <NO-OP>
102:STD:<CONT>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():399:continue; |==> <NO-OP>
103:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@initialize():401:line.indexOf(' ') |==> 0
104:LVR:POS:0:org.apache.xml.serialize.HTMLdtd@initialize():402:1 |==> 0
105:LVR:POS:NEG:org.apache.xml.serialize.HTMLdtd@initialize():402:1 |==> -1
106:ROR:>(int,int):!=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():402:index > 1 |==> index != 1
107:ROR:>(int,int):>=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():402:index > 1 |==> index >= 1
108:ROR:>(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@initialize():402:index > 1 |==> false
109:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@initialize():403:0 |==> 1
110:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@initialize():403:0 |==> -1
111:STD:<INC>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():404:++index |==> <NO-OP>
112:ROR:<(int,int):!=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():405:index < line.length() |==> index != line.length()
113:ROR:<(int,int):<=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():405:index < line.length() |==> index <= line.length()
114:ROR:<(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@initialize():405:index < line.length() |==> false
115:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@initialize():406:line.substring(index) |==> null
116:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():407:index = value.indexOf(' ') |==> <NO-OP>
117:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@initialize():408:0 |==> 1
118:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@initialize():408:0 |==> -1
119:ROR:>(int,int):!=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():408:index > 0 |==> index != 0
120:ROR:>(int,int):>=(int,int):org.apache.xml.serialize.HTMLdtd@initialize():408:index > 0 |==> index >= 0
121:ROR:>(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@initialize():408:index > 0 |==> false
122:LVR:0:POS:org.apache.xml.serialize.HTMLdtd@initialize():409:0 |==> 1
123:LVR:0:NEG:org.apache.xml.serialize.HTMLdtd@initialize():409:0 |==> -1
124:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():409:value = value.substring(0, index) |==> <NO-OP>
125:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@initialize():410:Integer.parseInt(value) |==> 0
126:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():411:defineEntity(name, (char)code) |==> <NO-OP>
127:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():414:line = reader.readLine() |==> <NO-OP>
128:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():416:is.close() |==> <NO-OP>
129:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@initialize():421:is != null |==> true
130:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@initialize():423:is.close() |==> <NO-OP>
131:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@defineEntity(java.lang.String,char):444:_byName.get(name) == null |==> false
132:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@defineEntity(java.lang.String,char):445:_byName.put(name, new Character(value)) |==> <NO-OP>
133:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@defineEntity(java.lang.String,char):446:_byChar.put(String.valueOf(value), name) |==> <NO-OP>
134:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@defineElement(java.lang.String,int):453:_elemDefs.put(name, new Integer(flags)) |==> <NO-OP>
135:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@defineBoolean(java.lang.String,java.lang.String):459:defineBoolean(tagName, new String[]{attrName}) |==> <NO-OP>
136:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd@defineBoolean(java.lang.String,java.lang.String[]):465:_boolAttrs.put(tagName, attrNames) |==> <NO-OP>
137:EVR:<TYPE_CAST(java.lang.Integer)>:<DEFAULT>:org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):473:(Integer)_elemDefs.get(name.toUpperCase()) |==> null
138:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):474:flags == null |==> false
139:LVR:FALSE:TRUE:org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):475:false |==> true
140:LOR:&(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):477:flags.intValue() & flag |==> flags.intValue() ^ flag
141:LOR:&(int,int):|(int,int):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):477:flags.intValue() & flag |==> flags.intValue() | flag
142:ROR:==(int,int):<=(int,int):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):477:(flags.intValue() & flag) == flag |==> (flags.intValue() & flag) <= flag
143:ROR:==(int,int):>=(int,int):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):477:(flags.intValue() & flag) == flag |==> (flags.intValue() & flag) >= flag
144:ROR:==(int,int):FALSE(int,int):org.apache.xml.serialize.HTMLdtd@isElement(java.lang.String,int):477:(flags.intValue() & flag) == flag |==> false
145:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:483:_elemDefs = new Hashtable() |==> <NO-OP>
146:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:484:defineElement("ADDRESS", CLOSE_P) |==> <NO-OP>
147:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:485:defineElement("AREA", EMPTY) |==> <NO-OP>
148:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:486:EMPTY | ALLOWED_HEAD |==> EMPTY & ALLOWED_HEAD
149:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:486:EMPTY | ALLOWED_HEAD |==> EMPTY ^ ALLOWED_HEAD
150:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:486:defineElement("BASE", EMPTY | ALLOWED_HEAD) |==> <NO-OP>
151:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:487:defineElement("BASEFONT", EMPTY) |==> <NO-OP>
152:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:488:defineElement("BLOCKQUOTE", CLOSE_P) |==> <NO-OP>
153:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:489:defineElement("BODY", OPT_CLOSING) |==> <NO-OP>
154:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:490:defineElement("BR", EMPTY) |==> <NO-OP>
155:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:491:defineElement("COL", EMPTY) |==> <NO-OP>
156:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:492:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
157:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:492:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
158:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:492:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) & CLOSE_TABLE
159:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:492:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) ^ CLOSE_TABLE
160:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:492:defineElement("COLGROUP", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE) |==> <NO-OP>
161:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:493:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING & ONLY_OPENING
162:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:493:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING ^ ONLY_OPENING
163:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:493:OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT |==> (OPT_CLOSING | ONLY_OPENING) & CLOSE_DD_DT
164:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:493:OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT |==> (OPT_CLOSING | ONLY_OPENING) ^ CLOSE_DD_DT
165:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:493:defineElement("DD", OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT) |==> <NO-OP>
166:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:494:defineElement("DIV", CLOSE_P) |==> <NO-OP>
167:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:495:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT & CLOSE_P
168:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:495:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT ^ CLOSE_P
169:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:495:defineElement("DL", ELEM_CONTENT | CLOSE_P) |==> <NO-OP>
170:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:496:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING & ONLY_OPENING
171:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:496:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING ^ ONLY_OPENING
172:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:496:OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT |==> (OPT_CLOSING | ONLY_OPENING) & CLOSE_DD_DT
173:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:496:OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT |==> (OPT_CLOSING | ONLY_OPENING) ^ CLOSE_DD_DT
174:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:496:defineElement("DT", OPT_CLOSING | ONLY_OPENING | CLOSE_DD_DT) |==> <NO-OP>
175:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:497:defineElement("FIELDSET", CLOSE_P) |==> <NO-OP>
176:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:498:defineElement("FORM", CLOSE_P) |==> <NO-OP>
177:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:499:EMPTY | OPT_CLOSING |==> EMPTY & OPT_CLOSING
178:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:499:EMPTY | OPT_CLOSING |==> EMPTY ^ OPT_CLOSING
179:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:499:defineElement("FRAME", EMPTY | OPT_CLOSING) |==> <NO-OP>
180:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:500:defineElement("H1", CLOSE_P) |==> <NO-OP>
181:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:501:defineElement("H2", CLOSE_P) |==> <NO-OP>
182:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:502:defineElement("H3", CLOSE_P) |==> <NO-OP>
183:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:503:defineElement("H4", CLOSE_P) |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:504:defineElement("H5", CLOSE_P) |==> <NO-OP>
185:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:505:defineElement("H6", CLOSE_P) |==> <NO-OP>
186:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:506:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
187:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:506:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
188:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:506:defineElement("HEAD", ELEM_CONTENT | OPT_CLOSING) |==> <NO-OP>
189:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:507:EMPTY | CLOSE_P |==> EMPTY & CLOSE_P
190:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:507:EMPTY | CLOSE_P |==> EMPTY ^ CLOSE_P
191:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:507:defineElement("HR", EMPTY | CLOSE_P) |==> <NO-OP>
192:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:508:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
193:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:508:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
194:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:508:defineElement("HTML", ELEM_CONTENT | OPT_CLOSING) |==> <NO-OP>
195:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:509:defineElement("IMG", EMPTY) |==> <NO-OP>
196:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:510:defineElement("INPUT", EMPTY) |==> <NO-OP>
197:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:511:EMPTY | ALLOWED_HEAD |==> EMPTY & ALLOWED_HEAD
198:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:511:EMPTY | ALLOWED_HEAD |==> EMPTY ^ ALLOWED_HEAD
199:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:511:defineElement("ISINDEX", EMPTY | ALLOWED_HEAD) |==> <NO-OP>
200:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:512:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING & ONLY_OPENING
201:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:512:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING ^ ONLY_OPENING
202:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:512:OPT_CLOSING | ONLY_OPENING | CLOSE_SELF |==> (OPT_CLOSING | ONLY_OPENING) & CLOSE_SELF
203:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:512:OPT_CLOSING | ONLY_OPENING | CLOSE_SELF |==> (OPT_CLOSING | ONLY_OPENING) ^ CLOSE_SELF
204:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:512:defineElement("LI", OPT_CLOSING | ONLY_OPENING | CLOSE_SELF) |==> <NO-OP>
205:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:513:EMPTY | ALLOWED_HEAD |==> EMPTY & ALLOWED_HEAD
206:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:513:EMPTY | ALLOWED_HEAD |==> EMPTY ^ ALLOWED_HEAD
207:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:513:defineElement("LINK", EMPTY | ALLOWED_HEAD) |==> <NO-OP>
208:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:514:defineElement("MAP", ALLOWED_HEAD) |==> <NO-OP>
209:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:515:EMPTY | ALLOWED_HEAD |==> EMPTY & ALLOWED_HEAD
210:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:515:EMPTY | ALLOWED_HEAD |==> EMPTY ^ ALLOWED_HEAD
211:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:515:defineElement("META", EMPTY | ALLOWED_HEAD) |==> <NO-OP>
212:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:516:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT & CLOSE_P
213:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:516:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT ^ CLOSE_P
214:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:516:defineElement("OL", ELEM_CONTENT | CLOSE_P) |==> <NO-OP>
215:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:517:defineElement("OPTGROUP", ELEM_CONTENT) |==> <NO-OP>
216:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:518:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING & ONLY_OPENING
217:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:518:OPT_CLOSING | ONLY_OPENING |==> OPT_CLOSING ^ ONLY_OPENING
218:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:518:OPT_CLOSING | ONLY_OPENING | CLOSE_SELF |==> (OPT_CLOSING | ONLY_OPENING) & CLOSE_SELF
219:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:518:OPT_CLOSING | ONLY_OPENING | CLOSE_SELF |==> (OPT_CLOSING | ONLY_OPENING) ^ CLOSE_SELF
220:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:518:defineElement("OPTION", OPT_CLOSING | ONLY_OPENING | CLOSE_SELF) |==> <NO-OP>
221:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:519:OPT_CLOSING | CLOSE_P |==> OPT_CLOSING & CLOSE_P
222:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:519:OPT_CLOSING | CLOSE_P |==> OPT_CLOSING ^ CLOSE_P
223:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:519:OPT_CLOSING | CLOSE_P | CLOSE_SELF |==> (OPT_CLOSING | CLOSE_P) & CLOSE_SELF
224:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:519:OPT_CLOSING | CLOSE_P | CLOSE_SELF |==> (OPT_CLOSING | CLOSE_P) ^ CLOSE_SELF
225:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:519:defineElement("P", OPT_CLOSING | CLOSE_P | CLOSE_SELF) |==> <NO-OP>
226:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:520:defineElement("PARAM", EMPTY) |==> <NO-OP>
227:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:521:PRESERVE | CLOSE_P |==> PRESERVE & CLOSE_P
228:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:521:PRESERVE | CLOSE_P |==> PRESERVE ^ CLOSE_P
229:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:521:defineElement("PRE", PRESERVE | CLOSE_P) |==> <NO-OP>
230:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:522:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD & PRESERVE
231:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:522:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD ^ PRESERVE
232:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:522:defineElement("SCRIPT", ALLOWED_HEAD | PRESERVE) |==> <NO-OP>
233:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:523:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD & PRESERVE
234:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:523:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD ^ PRESERVE
235:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:523:defineElement("NOSCRIPT", ALLOWED_HEAD | PRESERVE) |==> <NO-OP>
236:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:524:defineElement("SELECT", ELEM_CONTENT) |==> <NO-OP>
237:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:525:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD & PRESERVE
238:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:525:ALLOWED_HEAD | PRESERVE |==> ALLOWED_HEAD ^ PRESERVE
239:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:525:defineElement("STYLE", ALLOWED_HEAD | PRESERVE) |==> <NO-OP>
240:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:526:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT & CLOSE_P
241:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:526:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT ^ CLOSE_P
242:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:526:defineElement("TABLE", ELEM_CONTENT | CLOSE_P) |==> <NO-OP>
243:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:527:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
244:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:527:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
245:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:527:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) & CLOSE_TABLE
246:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:527:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) ^ CLOSE_TABLE
247:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:527:defineElement("TBODY", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE) |==> <NO-OP>
248:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:528:OPT_CLOSING | CLOSE_TH_TD |==> OPT_CLOSING & CLOSE_TH_TD
249:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:528:OPT_CLOSING | CLOSE_TH_TD |==> OPT_CLOSING ^ CLOSE_TH_TD
250:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:528:defineElement("TD", OPT_CLOSING | CLOSE_TH_TD) |==> <NO-OP>
251:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:529:defineElement("TEXTAREA", PRESERVE) |==> <NO-OP>
252:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:530:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
253:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:530:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
254:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:530:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) & CLOSE_TABLE
255:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:530:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) ^ CLOSE_TABLE
256:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:530:defineElement("TFOOT", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE) |==> <NO-OP>
257:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:531:OPT_CLOSING | CLOSE_TH_TD |==> OPT_CLOSING & CLOSE_TH_TD
258:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:531:OPT_CLOSING | CLOSE_TH_TD |==> OPT_CLOSING ^ CLOSE_TH_TD
259:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:531:defineElement("TH", OPT_CLOSING | CLOSE_TH_TD) |==> <NO-OP>
260:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:532:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
261:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:532:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
262:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:532:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) & CLOSE_TABLE
263:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:532:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) ^ CLOSE_TABLE
264:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:532:defineElement("THEAD", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE) |==> <NO-OP>
265:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:533:defineElement("TITLE", ALLOWED_HEAD) |==> <NO-OP>
266:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:534:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT & OPT_CLOSING
267:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:534:ELEM_CONTENT | OPT_CLOSING |==> ELEM_CONTENT ^ OPT_CLOSING
268:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:534:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) & CLOSE_TABLE
269:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:534:ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE |==> (ELEM_CONTENT | OPT_CLOSING) ^ CLOSE_TABLE
270:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:534:defineElement("TR", ELEM_CONTENT | OPT_CLOSING | CLOSE_TABLE) |==> <NO-OP>
271:LOR:|(int,int):&(int,int):org.apache.xml.serialize.HTMLdtd:535:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT & CLOSE_P
272:LOR:|(int,int):^(int,int):org.apache.xml.serialize.HTMLdtd:535:ELEM_CONTENT | CLOSE_P |==> ELEM_CONTENT ^ CLOSE_P
273:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:535:defineElement("UL", ELEM_CONTENT | CLOSE_P) |==> <NO-OP>
274:STD:<ASSIGN>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:537:_boolAttrs = new Hashtable() |==> <NO-OP>
275:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:538:defineBoolean("AREA", "href") |==> <NO-OP>
276:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:539:defineBoolean("BUTTON", "disabled") |==> <NO-OP>
277:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:540:defineBoolean("DIR", "compact") |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:541:defineBoolean("DL", "compact") |==> <NO-OP>
279:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:542:defineBoolean("FRAME", "noresize") |==> <NO-OP>
280:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:543:defineBoolean("HR", "noshade") |==> <NO-OP>
281:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:544:defineBoolean("IMAGE", "ismap") |==> <NO-OP>
282:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:545:defineBoolean("INPUT", new String[]{"defaultchecked", "checked", "readonly", "disabled"}) |==> <NO-OP>
283:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:546:defineBoolean("LINK", "link") |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:547:defineBoolean("MENU", "compact") |==> <NO-OP>
285:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:548:defineBoolean("OBJECT", "declare") |==> <NO-OP>
286:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:549:defineBoolean("OL", "compact") |==> <NO-OP>
287:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:550:defineBoolean("OPTGROUP", "disabled") |==> <NO-OP>
288:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:551:defineBoolean("OPTION", new String[]{"default-selected", "selected", "disabled"}) |==> <NO-OP>
289:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:552:defineBoolean("SCRIPT", "defer") |==> <NO-OP>
290:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:553:defineBoolean("SELECT", new String[]{"multiple", "disabled"}) |==> <NO-OP>
291:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:554:defineBoolean("STYLE", "disabled") |==> <NO-OP>
292:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:555:defineBoolean("TD", "nowrap") |==> <NO-OP>
293:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:556:defineBoolean("TH", "nowrap") |==> <NO-OP>
294:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:557:defineBoolean("TEXTAREA", new String[]{"disabled", "readonly"}) |==> <NO-OP>
295:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:558:defineBoolean("UL", "compact") |==> <NO-OP>
296:STD:<CALL>:<NO-OP>:org.apache.xml.serialize.HTMLdtd:560:initialize() |==> <NO-OP>
