1:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter:74:System.getProperty("line.separator") |==> null
2:EVR:<NEW_CLASS(java.lang.StringBuffer)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter:75:new StringBuffer() |==> null
3:EVR:<NEW_ARRAY(java.lang.String[])>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter:81:{"gt", "amp", "lt", "apos", "quot"} |==> null
4:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):97:0 |==> 1
5:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):97:0 |==> -1
6:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):97:i < indent |==> i != indent
7:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):97:i < indent |==> i <= indent
8:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):97:i < indent |==> false
9:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):98:out.write(indentWith) |==> <NO-OP>
10:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):102:out.write("<") |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):103:out.write(element.getTagName()) |==> <NO-OP>
12:EVR:<METHOD_INVOCATION(org.w3c.dom.NamedNodeMap)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):106:element.getAttributes() |==> null
13:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):107:0 |==> 1
14:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):107:0 |==> -1
15:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):107:i < attrs.getLength() |==> i != attrs.getLength()
16:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):107:i < attrs.getLength() |==> i <= attrs.getLength()
17:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):107:i < attrs.getLength() |==> false
18:EVR:<TYPE_CAST(org.w3c.dom.Attr)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):108:(Attr)attrs.item(i) |==> null
19:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):109:out.write(" ") |==> <NO-OP>
20:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):110:out.write(attr.getName()) |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):111:out.write("=\"") |==> <NO-OP>
22:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):112:out.write(encode(attr.getValue())) |==> <NO-OP>
23:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):113:out.write("\"") |==> <NO-OP>
24:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):115:out.write(">") |==> <NO-OP>
25:LVR:FALSE:TRUE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):118:false |==> true
26:EVR:<METHOD_INVOCATION(org.w3c.dom.NodeList)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):119:element.getChildNodes() |==> null
27:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):120:0 |==> 1
28:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):120:0 |==> -1
29:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):120:i < children.getLength() |==> i != children.getLength()
30:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):120:i < children.getLength() |==> i <= children.getLength()
31:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):120:i < children.getLength() |==> false
32:EVR:<METHOD_INVOCATION(org.w3c.dom.Node)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):121:children.item(i) |==> null
33:COR:hasChildren:TRUE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):126:hasChildren |==> false
34:COR:hasChildren:FALSE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):126:hasChildren |==> true
35:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):127:out.write(lSep) |==> <NO-OP>
36:LVR:TRUE:FALSE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):128:true |==> false
37:STD:<ASSIGN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):128:hasChildren = true |==> <NO-OP>
38:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:1 |==> 0
39:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:1 |==> -1
40:AOR:+(int,int):%(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:indent + 1 |==> indent % 1
41:AOR:+(int,int):*(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:indent + 1 |==> indent * 1
42:AOR:+(int,int):-(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:indent + 1 |==> indent - 1
43:AOR:+(int,int):/(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:indent + 1 |==> indent / 1
44:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):130:write((Element)child, out, indent + 1, indentWith) |==> <NO-OP>
45:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):131:break; |==> <NO-OP>
46:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):135:out.write("<![CDATA[") |==> <NO-OP>
47:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):136:out.write(((Text)child).getData()) |==> <NO-OP>
48:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):137:out.write("]]>") |==> <NO-OP>
49:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):138:break; |==> <NO-OP>
50:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):141:out.write('&') |==> <NO-OP>
51:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):142:out.write(child.getNodeName()) |==> <NO-OP>
52:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):143:out.write(';') |==> <NO-OP>
53:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):144:break; |==> <NO-OP>
54:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):147:out.write("<?") |==> <NO-OP>
55:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):148:out.write(child.getNodeName()) |==> <NO-OP>
56:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):149:child.getNodeValue() |==> null
57:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data != null |==> true
58:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:0 |==> 1
59:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:0 |==> -1
60:ROR:>(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data.length() > 0 |==> data.length() != 0
61:ROR:>(int,int):>=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data.length() > 0 |==> data.length() >= 0
62:ROR:>(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data.length() > 0 |==> false
63:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data != null && data.length() > 0 |==> data != null == data.length() > 0
64:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data != null && data.length() > 0 |==> false
65:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data != null && data.length() > 0 |==> data != null
66:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):150:data != null && data.length() > 0 |==> data.length() > 0
67:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):151:out.write(' ') |==> <NO-OP>
68:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):152:out.write(data) |==> <NO-OP>
69:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):154:out.write("?>") |==> <NO-OP>
70:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):155:break; |==> <NO-OP>
71:COR:hasChildren:TRUE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):162:hasChildren |==> false
72:COR:hasChildren:FALSE:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):162:hasChildren |==> true
73:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):163:0 |==> 1
74:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):163:0 |==> -1
75:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):163:i < indent |==> i != indent
76:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):163:i < indent |==> i <= indent
77:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):163:i < indent |==> false
78:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):164:out.write(indentWith) |==> <NO-OP>
79:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):169:out.write("</") |==> <NO-OP>
80:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):170:out.write(element.getTagName()) |==> <NO-OP>
81:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):171:out.write(">") |==> <NO-OP>
82:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@write(org.w3c.dom.Element,java.io.Writer,int,java.lang.String):172:out.write(lSep) |==> <NO-OP>
83:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):179:0 |==> 1
84:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):179:0 |==> -1
85:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):179:sb.setLength(0) |==> <NO-OP>
86:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):180:0 |==> 1
87:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):180:0 |==> -1
88:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):180:i < value.length() |==> i != value.length()
89:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):180:i < value.length() |==> i <= value.length()
90:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):180:i < value.length() |==> false
91:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):181:value.charAt(i) |==> 0
92:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):184:sb.append("&lt;") |==> <NO-OP>
93:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):185:break; |==> <NO-OP>
94:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):187:sb.append("&quot;") |==> <NO-OP>
95:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):188:break; |==> <NO-OP>
96:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):190:value.indexOf(";", i) |==> 0
97:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:0 |==> 1
98:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:0 |==> -1
99:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:nextSemi < 0 |==> nextSemi != 0
100:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:nextSemi < 0 |==> nextSemi <= 0
101:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:nextSemi < 0 |==> false
102:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:1 |==> 0
103:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:1 |==> -1
104:AOR:+(int,int):%(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi + 1 |==> nextSemi % 1
105:AOR:+(int,int):*(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi + 1 |==> nextSemi * 1
106:AOR:+(int,int):-(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi + 1 |==> nextSemi - 1
107:AOR:+(int,int):/(int,int):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi + 1 |==> nextSemi / 1
108:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:nextSemi < 0 || !isReference(value.substring(i, nextSemi + 1)) |==> nextSemi < 0 != !isReference(value.substring(i, nextSemi + 1))
109:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):191:nextSemi < 0 || !isReference(value.substring(i, nextSemi + 1)) |==> nextSemi < 0
110:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi < 0 || !isReference(value.substring(i, nextSemi + 1)) |==> !isReference(value.substring(i, nextSemi + 1))
111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):192:nextSemi < 0 || !isReference(value.substring(i, nextSemi + 1)) |==> true
112:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):193:sb.append("&amp;") |==> <NO-OP>
113:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):195:sb.append('&') |==> <NO-OP>
114:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):197:break; |==> <NO-OP>
115:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):199:sb.append(c) |==> <NO-OP>
116:STD:<BREAK>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):200:break; |==> <NO-OP>
117:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:org.apache.tools.ant.util.DOMElementWriter@encode(java.lang.String):203:sb.toString() |==> null
118:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:0 |==> 1
119:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:0 |==> -1
120:ROR:==(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:ent.charAt(0) == '&' |==> ent.charAt(0) <= '&'
121:ROR:==(int,int):>=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:ent.charAt(0) == '&' |==> ent.charAt(0) >= '&'
122:ROR:==(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:ent.charAt(0) == '&' |==> false
123:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:!(ent.charAt(0) == '&') || !ent.endsWith(";") |==> !(ent.charAt(0) == '&') != !ent.endsWith(";")
124:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:!(ent.charAt(0) == '&') || !ent.endsWith(";") |==> !(ent.charAt(0) == '&')
125:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:!(ent.charAt(0) == '&') || !ent.endsWith(";") |==> !ent.endsWith(";")
126:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):210:!(ent.charAt(0) == '&') || !ent.endsWith(";") |==> true
127:LVR:FALSE:TRUE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):211:false |==> true
128:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):211:return Config.__M_NO == 0 && Config.COVERED(127, 127) ? false : Config.__M_NO == 127 ? true : false; |==> <NO-OP>
129:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):214:1 |==> 0
130:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):214:1 |==> -1
131:ROR:==(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):214:ent.charAt(1) == '#' |==> ent.charAt(1) <= '#'
132:ROR:==(int,int):>=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):214:ent.charAt(1) == '#' |==> ent.charAt(1) >= '#'
133:ROR:==(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):214:ent.charAt(1) == '#' |==> false
134:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):215:2 |==> 0
135:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):215:2 |==> -2
136:ROR:==(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):215:ent.charAt(2) == 'x' |==> ent.charAt(2) <= 'x'
137:ROR:==(int,int):>=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):215:ent.charAt(2) == 'x' |==> ent.charAt(2) >= 'x'
138:ROR:==(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):215:ent.charAt(2) == 'x' |==> false
139:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:3 |==> 0
140:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:3 |==> -3
141:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:1 |==> 0
142:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:1 |==> -1
143:AOR:-(int,int):%(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:ent.length() - 1 |==> ent.length() % 1
144:AOR:-(int,int):*(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:ent.length() - 1 |==> ent.length() * 1
145:AOR:-(int,int):+(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:ent.length() - 1 |==> ent.length() + 1
146:AOR:-(int,int):/(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:ent.length() - 1 |==> ent.length() / 1
147:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:16 |==> 0
148:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:16 |==> -16
149:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):217:Integer.parseInt(ent.substring(3, ent.length() - 1), 16) |==> <NO-OP>
150:LVR:TRUE:FALSE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):218:true |==> false
151:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):218:return Config.__M_NO == 0 && Config.COVERED(150, 150) ? true : Config.__M_NO == 150 ? false : true; |==> <NO-OP>
152:LVR:FALSE:TRUE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):220:false |==> true
153:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):220:return Config.__M_NO == 0 && Config.COVERED(152, 152) ? false : Config.__M_NO == 152 ? true : false; |==> <NO-OP>
154:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:2 |==> 0
155:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:2 |==> -2
156:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:1 |==> 0
157:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:1 |==> -1
158:AOR:-(int,int):%(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:ent.length() - 1 |==> ent.length() % 1
159:AOR:-(int,int):*(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:ent.length() - 1 |==> ent.length() * 1
160:AOR:-(int,int):+(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:ent.length() - 1 |==> ent.length() + 1
161:AOR:-(int,int):/(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:ent.length() - 1 |==> ent.length() / 1
162:STD:<CALL>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):224:Integer.parseInt(ent.substring(2, ent.length() - 1)) |==> <NO-OP>
163:LVR:TRUE:FALSE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):225:true |==> false
164:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):225:return Config.__M_NO == 0 && Config.COVERED(163, 163) ? true : Config.__M_NO == 163 ? false : true; |==> <NO-OP>
165:LVR:FALSE:TRUE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):227:false |==> true
166:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):227:return Config.__M_NO == 0 && Config.COVERED(165, 165) ? false : Config.__M_NO == 165 ? true : false; |==> <NO-OP>
167:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:1 |==> 0
168:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:1 |==> -1
169:LVR:POS:0:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:1 |==> 0
170:LVR:POS:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:1 |==> -1
171:AOR:-(int,int):%(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:ent.length() - 1 |==> ent.length() % 1
172:AOR:-(int,int):*(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:ent.length() - 1 |==> ent.length() * 1
173:AOR:-(int,int):+(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:ent.length() - 1 |==> ent.length() + 1
174:AOR:-(int,int):/(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):232:ent.length() - 1 |==> ent.length() / 1
175:LVR:0:POS:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):233:0 |==> 1
176:LVR:0:NEG:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):233:0 |==> -1
177:ROR:<(int,int):!=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):233:i < knownEntities.length |==> i != knownEntities.length
178:ROR:<(int,int):<=(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):233:i < knownEntities.length |==> i <= knownEntities.length
179:ROR:<(int,int):FALSE(int,int):org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):233:i < knownEntities.length |==> false
180:COR:name.equals(knownEntities[i]):TRUE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):234:name.equals(knownEntities[i]) |==> false
181:COR:name.equals(knownEntities[i]):FALSE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):234:name.equals(knownEntities[i]) |==> true
182:LVR:TRUE:FALSE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):235:true |==> false
183:STD:<RETURN>:<NO-OP>:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):235:return Config.__M_NO == 0 && Config.COVERED(182, 182) ? true : Config.__M_NO == 182 ? false : true; |==> <NO-OP>
184:LVR:FALSE:TRUE:org.apache.tools.ant.util.DOMElementWriter@isReference(java.lang.String):238:false |==> true
