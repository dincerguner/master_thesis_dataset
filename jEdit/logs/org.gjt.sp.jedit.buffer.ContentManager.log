1:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@getLength():43:length |==> 0
2:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):49:start >= gapStart |==> start == gapStart
3:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):49:start >= gapStart |==> start > gapStart
4:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):49:start >= gapStart |==> true
5:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd |==> start % gapEnd
6:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd |==> start * gapEnd
7:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd |==> start - gapEnd
8:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd |==> start / gapEnd
9:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd - gapStart |==> (start + gapEnd) % gapStart
10:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd - gapStart |==> (start + gapEnd) * gapStart
11:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd - gapStart |==> start + gapEnd + gapStart
12:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):50:start + gapEnd - gapStart |==> (start + gapEnd) / gapStart
13:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len |==> start % len
14:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len |==> start * len
15:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len |==> start - len
16:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len |==> start / len
17:ROR:<=(int,int):<(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len <= gapStart |==> start + len < gapStart
18:ROR:<=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len <= gapStart |==> start + len == gapStart
19:ROR:<=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):51:start + len <= gapStart |==> true
20:EVR:<NEW_CLASS(java.lang.String)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):52:new String(text, start, len) |==> null
21:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:gapStart - start |==> gapStart % start
22:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:gapStart - start |==> gapStart * start
23:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:gapStart - start |==> gapStart + start
24:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:gapStart - start |==> gapStart / start
25:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len |==> start % len
26:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len |==> start * len
27:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len |==> start - len
28:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len |==> start / len
29:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len - gapStart |==> (start + len) % gapStart
30:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len - gapStart |==> (start + len) * gapStart
31:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len - gapStart |==> start + len + gapStart
32:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + len - gapStart |==> (start + len) / gapStart
33:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):63:start >= gapStart |==> start == gapStart
34:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):63:start >= gapStart |==> start > gapStart
35:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):63:start >= gapStart |==> true
36:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):65:seg.array = text |==> <NO-OP>
37:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd |==> start % gapEnd
38:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd |==> start * gapEnd
39:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd |==> start - gapEnd
40:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd |==> start / gapEnd
41:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd - gapStart |==> (start + gapEnd) % gapStart
42:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd - gapStart |==> (start + gapEnd) * gapStart
43:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd - gapStart |==> start + gapEnd + gapStart
44:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:start + gapEnd - gapStart |==> (start + gapEnd) / gapStart
45:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):66:seg.offset = start + gapEnd - gapStart |==> <NO-OP>
46:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):67:seg.count = len |==> <NO-OP>
47:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len |==> start % len
48:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len |==> start * len
49:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len |==> start - len
50:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len |==> start / len
51:ROR:<=(int,int):<(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len <= gapStart |==> start + len < gapStart
52:ROR:<=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len <= gapStart |==> start + len == gapStart
53:ROR:<=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start + len <= gapStart |==> true
54:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):71:seg.array = text |==> <NO-OP>
55:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:seg.offset = start |==> <NO-OP>
56:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):73:seg.count = len |==> <NO-OP>
57:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):77:seg.array = new char[len] |==> <NO-OP>
58:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:0 |==> 1
59:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:0 |==> -1
60:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:gapStart - start |==> gapStart % start
61:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:gapStart - start |==> gapStart * start
62:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:gapStart - start |==> gapStart + start
63:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:gapStart - start |==> gapStart / start
64:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):80:System.arraycopy(text, start, seg.array, 0, gapStart - start) |==> <NO-OP>
65:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:gapStart - start |==> gapStart % start
66:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:gapStart - start |==> gapStart * start
67:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:gapStart - start |==> gapStart + start
68:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:gapStart - start |==> gapStart / start
69:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start |==> len % start
70:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start |==> len * start
71:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start |==> len - start
72:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start |==> len / start
73:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start - gapStart |==> (len + start) % gapStart
74:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start - gapStart |==> (len + start) * gapStart
75:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start - gapStart |==> len + start + gapStart
76:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):84:len + start - gapStart |==> (len + start) / gapStart
77:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:System.arraycopy(text, gapEnd, seg.array, gapStart - start, len + start - gapStart) |==> <NO-OP>
78:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:0 |==> 1
79:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:0 |==> -1
80:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:seg.offset = 0 |==> <NO-OP>
81:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):87:seg.count = len |==> <NO-OP>
82:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):94:str.length() |==> 0
83:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):95:moveGapStart(start) |==> <NO-OP>
84:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart |==> gapEnd % gapStart
85:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart |==> gapEnd * gapStart
86:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart |==> gapEnd + gapStart
87:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart |==> gapEnd / gapStart
88:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart < len |==> gapEnd - gapStart != len
89:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart < len |==> gapEnd - gapStart <= len
90:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):96:gapEnd - gapStart < len |==> false
91:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len |==> length % len
92:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len |==> length * len
93:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len |==> length - len
94:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len |==> length / len
95:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:1024 |==> 0
96:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:1024 |==> -1024
97:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len + 1024 |==> (length + len) % 1024
98:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len + 1024 |==> (length + len) * 1024
99:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len + 1024 |==> length + len - 1024
100:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:length + len + 1024 |==> (length + len) / 1024
101:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):98:ensureCapacity(length + len + 1024) |==> <NO-OP>
102:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len |==> start % len
103:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len |==> start * len
104:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len |==> start - len
105:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len |==> start / len
106:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:1024 |==> 0
107:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:1024 |==> -1024
108:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len + 1024 |==> (start + len) % 1024
109:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len + 1024 |==> (start + len) * 1024
110:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len + 1024 |==> start + len - 1024
111:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:start + len + 1024 |==> (start + len) / 1024
112:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):99:moveGapEnd(start + len + 1024) |==> <NO-OP>
113:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:0 |==> 1
114:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:0 |==> -1
115:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:str.getChars(0, len, text, start) |==> <NO-OP>
116:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):103:gapStart += len |==> <NO-OP>
117:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length += len |==> <NO-OP>
118:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):110:moveGapStart(start) |==> <NO-OP>
119:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart |==> gapEnd % gapStart
120:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart |==> gapEnd * gapStart
121:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart |==> gapEnd + gapStart
122:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart |==> gapEnd / gapStart
123:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart < seg.count |==> gapEnd - gapStart != seg.count
124:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart < seg.count |==> gapEnd - gapStart <= seg.count
125:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):111:gapEnd - gapStart < seg.count |==> false
126:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count |==> length % seg.count
127:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count |==> length * seg.count
128:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count |==> length - seg.count
129:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count |==> length / seg.count
130:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:1024 |==> 0
131:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:1024 |==> -1024
132:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count + 1024 |==> (length + seg.count) % 1024
133:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count + 1024 |==> (length + seg.count) * 1024
134:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count + 1024 |==> length + seg.count - 1024
135:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:length + seg.count + 1024 |==> (length + seg.count) / 1024
136:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):113:ensureCapacity(length + seg.count + 1024) |==> <NO-OP>
137:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count |==> start % seg.count
138:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count |==> start * seg.count
139:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count |==> start - seg.count
140:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count |==> start / seg.count
141:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:1024 |==> 0
142:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:1024 |==> -1024
143:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count + 1024 |==> (start + seg.count) % 1024
144:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count + 1024 |==> (start + seg.count) * 1024
145:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count + 1024 |==> start + seg.count - 1024
146:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:start + seg.count + 1024 |==> (start + seg.count) / 1024
147:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):114:moveGapEnd(start + seg.count + 1024) |==> <NO-OP>
148:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:System.arraycopy(seg.array, seg.offset, text, start, seg.count) |==> <NO-OP>
149:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):118:gapStart += seg.count |==> <NO-OP>
150:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length += seg.count |==> <NO-OP>
151:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):125:this.text = text |==> <NO-OP>
152:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):126:0 |==> 1
153:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):126:0 |==> -1
154:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):126:this.gapStart = this.gapEnd = 0 |==> <NO-OP>
155:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):127:this.length = length |==> <NO-OP>
156:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):133:moveGapStart(start) |==> <NO-OP>
157:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):134:gapEnd += len |==> <NO-OP>
158:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):135:length -= len |==> <NO-OP>
159:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:newStart - gapStart |==> newStart % gapStart
160:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:newStart - gapStart |==> newStart * gapStart
161:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:newStart - gapStart |==> newStart + gapStart
162:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:newStart - gapStart |==> newStart / gapStart
163:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:gapEnd + (newStart - gapStart) |==> gapEnd % (newStart - gapStart)
164:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:gapEnd + (newStart - gapStart) |==> gapEnd * (newStart - gapStart)
165:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:gapEnd + (newStart - gapStart) |==> gapEnd - (newStart - gapStart)
166:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):147:gapEnd + (newStart - gapStart) |==> gapEnd / (newStart - gapStart)
167:ROR:==(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):149:newStart == gapStart |==> newStart <= gapStart
168:ROR:==(int,int):>=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):149:newStart == gapStart |==> newStart >= gapStart
169:ROR:==(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):149:newStart == gapStart |==> false
170:ROR:>(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart > gapStart |==> newStart != gapStart
171:ROR:>(int,int):>=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart > gapStart |==> newStart >= gapStart
172:ROR:>(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart > gapStart |==> false
173:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):156:newStart - gapStart |==> newStart % gapStart
174:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):156:newStart - gapStart |==> newStart * gapStart
175:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):156:newStart - gapStart |==> newStart + gapStart
176:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):156:newStart - gapStart |==> newStart / gapStart
177:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):155:System.arraycopy(text, gapEnd, text, gapStart, newStart - gapStart) |==> <NO-OP>
178:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):158:newStart < gapStart |==> newStart != gapStart
179:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):158:newStart < gapStart |==> newStart <= gapStart
180:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):158:newStart < gapStart |==> false
181:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):161:gapStart - newStart |==> gapStart % newStart
182:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):161:gapStart - newStart |==> gapStart * newStart
183:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):161:gapStart - newStart |==> gapStart + newStart
184:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):161:gapStart - newStart |==> gapStart / newStart
185:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):160:System.arraycopy(text, newStart, text, newEnd, gapStart - newStart) |==> <NO-OP>
186:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):164:gapStart = newStart |==> <NO-OP>
187:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):165:gapEnd = newEnd |==> <NO-OP>
188:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):171:length - gapStart |==> length % gapStart
189:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):171:length - gapStart |==> length * gapStart
190:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):171:length - gapStart |==> length + gapStart
191:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):171:length - gapStart |==> length / gapStart
192:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):171:System.arraycopy(text, gapEnd, text, newEnd, length - gapStart) |==> <NO-OP>
193:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):172:gapEnd = newEnd |==> <NO-OP>
194:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):178:capacity >= text.length |==> capacity == text.length
195:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):178:capacity >= text.length |==> capacity > text.length
196:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):178:capacity >= text.length |==> true
197:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:2 |==> 0
198:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:2 |==> -2
199:AOR:*(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:capacity * 2 |==> capacity % 2
200:AOR:*(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:capacity * 2 |==> capacity + 2
201:AOR:*(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:capacity * 2 |==> capacity - 2
202:AOR:*(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):180:capacity * 2 |==> capacity / 2
203:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:0 |==> 1
204:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:0 |==> -1
205:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:0 |==> 1
206:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:0 |==> -1
207:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:gapEnd - gapStart |==> gapEnd % gapStart
208:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:gapEnd - gapStart |==> gapEnd * gapStart
209:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:gapEnd - gapStart |==> gapEnd + gapStart
210:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:gapEnd - gapStart |==> gapEnd / gapStart
211:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:length + (gapEnd - gapStart) |==> length % (gapEnd - gapStart)
212:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:length + (gapEnd - gapStart) |==> length * (gapEnd - gapStart)
213:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:length + (gapEnd - gapStart) |==> length - (gapEnd - gapStart)
214:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:length + (gapEnd - gapStart) |==> length / (gapEnd - gapStart)
215:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):181:System.arraycopy(text, 0, textN, 0, length + (gapEnd - gapStart)) |==> <NO-OP>
216:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):182:text = textN |==> <NO-OP>
