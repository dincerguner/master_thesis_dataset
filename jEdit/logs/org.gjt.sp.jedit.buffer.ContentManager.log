1:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@<init>():43:1024 |==> 0
2:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@<init>():43:1024 |==> -1024
3:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@<init>():43:text = new char[1024] |==> <NO-OP>
4:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@getLength():49:length |==> 0
5:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:start >= gapStart |==> start == gapStart
6:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:start >= gapStart |==> start > gapStart
7:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):55:start >= gapStart |==> true
8:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd |==> start % gapEnd
9:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd |==> start * gapEnd
10:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd |==> start - gapEnd
11:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd |==> start / gapEnd
12:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd - gapStart |==> (start + gapEnd) % gapStart
13:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd - gapStart |==> (start + gapEnd) * gapStart
14:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd - gapStart |==> start + gapEnd + gapStart
15:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):56:start + gapEnd - gapStart |==> (start + gapEnd) / gapStart
16:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len |==> start % len
17:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len |==> start * len
18:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len |==> start - len
19:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len |==> start / len
20:ROR:<=(int,int):<(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len <= gapStart |==> start + len < gapStart
21:ROR:<=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len <= gapStart |==> start + len == gapStart
22:ROR:<=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):57:start + len <= gapStart |==> true
23:EVR:<NEW_CLASS(java.lang.String)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):58:new String(text, start, len) |==> null
24:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):61:gapStart - start |==> gapStart % start
25:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):61:gapStart - start |==> gapStart * start
26:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):61:gapStart - start |==> gapStart + start
27:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):61:gapStart - start |==> gapStart / start
28:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len |==> start % len
29:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len |==> start * len
30:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len |==> start - len
31:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len |==> start / len
32:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len - gapStart |==> (start + len) % gapStart
33:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len - gapStart |==> (start + len) * gapStart
34:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len - gapStart |==> start + len + gapStart
35:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int):62:start + len - gapStart |==> (start + len) / gapStart
36:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start >= gapStart |==> start == gapStart
37:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start >= gapStart |==> start > gapStart
38:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):69:start >= gapStart |==> true
39:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):71:seg.array = text |==> <NO-OP>
40:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd |==> start % gapEnd
41:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd |==> start * gapEnd
42:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd |==> start - gapEnd
43:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd |==> start / gapEnd
44:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd - gapStart |==> (start + gapEnd) % gapStart
45:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd - gapStart |==> (start + gapEnd) * gapStart
46:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd - gapStart |==> start + gapEnd + gapStart
47:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:start + gapEnd - gapStart |==> (start + gapEnd) / gapStart
48:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):72:seg.offset = start + gapEnd - gapStart |==> <NO-OP>
49:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):73:seg.count = len |==> <NO-OP>
50:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len |==> start % len
51:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len |==> start * len
52:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len |==> start - len
53:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len |==> start / len
54:ROR:<=(int,int):<(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len <= gapStart |==> start + len < gapStart
55:ROR:<=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len <= gapStart |==> start + len == gapStart
56:ROR:<=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):75:start + len <= gapStart |==> true
57:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):77:seg.array = text |==> <NO-OP>
58:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):78:seg.offset = start |==> <NO-OP>
59:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):79:seg.count = len |==> <NO-OP>
60:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):83:seg.array = new char[len] |==> <NO-OP>
61:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:0 |==> 1
62:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:0 |==> -1
63:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:gapStart - start |==> gapStart % start
64:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:gapStart - start |==> gapStart * start
65:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:gapStart - start |==> gapStart + start
66:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:gapStart - start |==> gapStart / start
67:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):86:System.arraycopy(text, start, seg.array, 0, gapStart - start) |==> <NO-OP>
68:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):89:gapStart - start |==> gapStart % start
69:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):89:gapStart - start |==> gapStart * start
70:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):89:gapStart - start |==> gapStart + start
71:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):89:gapStart - start |==> gapStart / start
72:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start |==> len % start
73:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start |==> len * start
74:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start |==> len - start
75:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start |==> len / start
76:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start - gapStart |==> (len + start) % gapStart
77:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start - gapStart |==> (len + start) * gapStart
78:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start - gapStart |==> len + start + gapStart
79:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):90:len + start - gapStart |==> (len + start) / gapStart
80:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):89:System.arraycopy(text, gapEnd, seg.array, gapStart - start, len + start - gapStart) |==> <NO-OP>
81:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):92:0 |==> 1
82:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):92:0 |==> -1
83:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):92:seg.offset = 0 |==> <NO-OP>
84:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@getText(int,int,javax.swing.text.Segment):93:seg.count = len |==> <NO-OP>
85:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):100:str.length() |==> 0
86:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):101:moveGapStart(start) |==> <NO-OP>
87:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart |==> gapEnd % gapStart
88:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart |==> gapEnd * gapStart
89:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart |==> gapEnd + gapStart
90:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart |==> gapEnd / gapStart
91:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart < len |==> gapEnd - gapStart != len
92:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart < len |==> gapEnd - gapStart <= len
93:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):102:gapEnd - gapStart < len |==> false
94:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len |==> length % len
95:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len |==> length * len
96:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len |==> length - len
97:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len |==> length / len
98:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:1024 |==> 0
99:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:1024 |==> -1024
100:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len + 1024 |==> (length + len) % 1024
101:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len + 1024 |==> (length + len) * 1024
102:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len + 1024 |==> length + len - 1024
103:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:length + len + 1024 |==> (length + len) / 1024
104:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):104:ensureCapacity(length + len + 1024) |==> <NO-OP>
105:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len |==> start % len
106:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len |==> start * len
107:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len |==> start - len
108:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len |==> start / len
109:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:1024 |==> 0
110:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:1024 |==> -1024
111:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len + 1024 |==> (start + len) % 1024
112:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len + 1024 |==> (start + len) * 1024
113:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len + 1024 |==> start + len - 1024
114:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:start + len + 1024 |==> (start + len) / 1024
115:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):105:moveGapEnd(start + len + 1024) |==> <NO-OP>
116:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):108:0 |==> 1
117:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):108:0 |==> -1
118:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):108:str.getChars(0, len, text, start) |==> <NO-OP>
119:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):109:gapStart += len |==> <NO-OP>
120:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,java.lang.String):110:length += len |==> <NO-OP>
121:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):116:moveGapStart(start) |==> <NO-OP>
122:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart |==> gapEnd % gapStart
123:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart |==> gapEnd * gapStart
124:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart |==> gapEnd + gapStart
125:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart |==> gapEnd / gapStart
126:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart < seg.count |==> gapEnd - gapStart != seg.count
127:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart < seg.count |==> gapEnd - gapStart <= seg.count
128:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):117:gapEnd - gapStart < seg.count |==> false
129:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count |==> length % seg.count
130:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count |==> length * seg.count
131:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count |==> length - seg.count
132:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count |==> length / seg.count
133:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:1024 |==> 0
134:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:1024 |==> -1024
135:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count + 1024 |==> (length + seg.count) % 1024
136:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count + 1024 |==> (length + seg.count) * 1024
137:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count + 1024 |==> length + seg.count - 1024
138:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:length + seg.count + 1024 |==> (length + seg.count) / 1024
139:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):119:ensureCapacity(length + seg.count + 1024) |==> <NO-OP>
140:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count |==> start % seg.count
141:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count |==> start * seg.count
142:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count |==> start - seg.count
143:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count |==> start / seg.count
144:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:1024 |==> 0
145:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:1024 |==> -1024
146:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count + 1024 |==> (start + seg.count) % 1024
147:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count + 1024 |==> (start + seg.count) * 1024
148:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count + 1024 |==> start + seg.count - 1024
149:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:start + seg.count + 1024 |==> (start + seg.count) / 1024
150:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):120:moveGapEnd(start + seg.count + 1024) |==> <NO-OP>
151:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):123:System.arraycopy(seg.array, seg.offset, text, start, seg.count) |==> <NO-OP>
152:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):124:gapStart += seg.count |==> <NO-OP>
153:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@insert(int,javax.swing.text.Segment):125:length += seg.count |==> <NO-OP>
154:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):131:this.text = text |==> <NO-OP>
155:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):132:0 |==> 1
156:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):132:0 |==> -1
157:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):132:this.gapStart = this.gapEnd = 0 |==> <NO-OP>
158:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@_setContent(char[],int):133:this.length = length |==> <NO-OP>
159:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):139:moveGapStart(start) |==> <NO-OP>
160:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):140:gapEnd += len |==> <NO-OP>
161:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@remove(int,int):141:length -= len |==> <NO-OP>
162:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart - gapStart |==> newStart % gapStart
163:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart - gapStart |==> newStart * gapStart
164:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart - gapStart |==> newStart + gapStart
165:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:newStart - gapStart |==> newStart / gapStart
166:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:gapEnd + (newStart - gapStart) |==> gapEnd % (newStart - gapStart)
167:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:gapEnd + (newStart - gapStart) |==> gapEnd * (newStart - gapStart)
168:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:gapEnd + (newStart - gapStart) |==> gapEnd - (newStart - gapStart)
169:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):153:gapEnd + (newStart - gapStart) |==> gapEnd / (newStart - gapStart)
170:ROR:==(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):155:newStart == gapStart |==> newStart <= gapStart
171:ROR:==(int,int):>=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):155:newStart == gapStart |==> newStart >= gapStart
172:ROR:==(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):155:newStart == gapStart |==> false
173:ROR:>(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):159:newStart > gapStart |==> newStart != gapStart
174:ROR:>(int,int):>=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):159:newStart > gapStart |==> newStart >= gapStart
175:ROR:>(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):159:newStart > gapStart |==> false
176:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):162:newStart - gapStart |==> newStart % gapStart
177:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):162:newStart - gapStart |==> newStart * gapStart
178:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):162:newStart - gapStart |==> newStart + gapStart
179:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):162:newStart - gapStart |==> newStart / gapStart
180:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):161:System.arraycopy(text, gapEnd, text, gapStart, newStart - gapStart) |==> <NO-OP>
181:ROR:<(int,int):!=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):164:newStart < gapStart |==> newStart != gapStart
182:ROR:<(int,int):<=(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):164:newStart < gapStart |==> newStart <= gapStart
183:ROR:<(int,int):FALSE(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):164:newStart < gapStart |==> false
184:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):167:gapStart - newStart |==> gapStart % newStart
185:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):167:gapStart - newStart |==> gapStart * newStart
186:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):167:gapStart - newStart |==> gapStart + newStart
187:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):167:gapStart - newStart |==> gapStart / newStart
188:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):166:System.arraycopy(text, newStart, text, newEnd, gapStart - newStart) |==> <NO-OP>
189:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):170:gapStart = newStart |==> <NO-OP>
190:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapStart(int):171:gapEnd = newEnd |==> <NO-OP>
191:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):177:length - gapStart |==> length % gapStart
192:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):177:length - gapStart |==> length * gapStart
193:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):177:length - gapStart |==> length + gapStart
194:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):177:length - gapStart |==> length / gapStart
195:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):177:System.arraycopy(text, gapEnd, text, newEnd, length - gapStart) |==> <NO-OP>
196:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@moveGapEnd(int):178:gapEnd = newEnd |==> <NO-OP>
197:ROR:>=(int,int):==(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):184:capacity >= text.length |==> capacity == text.length
198:ROR:>=(int,int):>(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):184:capacity >= text.length |==> capacity > text.length
199:ROR:>=(int,int):TRUE(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):184:capacity >= text.length |==> true
200:LVR:POS:0:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:2 |==> 0
201:LVR:POS:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:2 |==> -2
202:AOR:*(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:capacity * 2 |==> capacity % 2
203:AOR:*(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:capacity * 2 |==> capacity + 2
204:AOR:*(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:capacity * 2 |==> capacity - 2
205:AOR:*(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):186:capacity * 2 |==> capacity / 2
206:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:0 |==> 1
207:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:0 |==> -1
208:LVR:0:POS:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:0 |==> 1
209:LVR:0:NEG:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:0 |==> -1
210:AOR:-(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:gapEnd - gapStart |==> gapEnd % gapStart
211:AOR:-(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:gapEnd - gapStart |==> gapEnd * gapStart
212:AOR:-(int,int):+(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:gapEnd - gapStart |==> gapEnd + gapStart
213:AOR:-(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:gapEnd - gapStart |==> gapEnd / gapStart
214:AOR:+(int,int):%(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:length + (gapEnd - gapStart) |==> length % (gapEnd - gapStart)
215:AOR:+(int,int):*(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:length + (gapEnd - gapStart) |==> length * (gapEnd - gapStart)
216:AOR:+(int,int):-(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:length + (gapEnd - gapStart) |==> length - (gapEnd - gapStart)
217:AOR:+(int,int):/(int,int):org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:length + (gapEnd - gapStart) |==> length / (gapEnd - gapStart)
218:STD:<CALL>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):187:System.arraycopy(text, 0, textN, 0, length + (gapEnd - gapStart)) |==> <NO-OP>
219:STD:<ASSIGN>:<NO-OP>:org.gjt.sp.jedit.buffer.ContentManager@ensureCapacity(int):188:text = textN |==> <NO-OP>
