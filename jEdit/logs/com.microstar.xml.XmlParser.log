1:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setHandler(XmlHandler):76:this.handler = handler |==> <NO-OP>
2:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parse(java.lang.String,java.lang.String,java.lang.String):94:doParse(systemId, publicId, null, null, encoding) |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parse(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String):119:doParse(systemId, publicId, null, stream, encoding) |==> <NO-OP>
4:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parse(java.lang.String,java.lang.String,java.io.Reader):142:doParse(systemId, publicId, reader, null, null) |==> <NO-OP>
5:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):151:basePublicId = publicId |==> <NO-OP>
6:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):152:baseURI = systemId |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):153:baseReader = reader |==> <NO-OP>
8:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):154:baseInputStream = stream |==> <NO-OP>
9:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):156:initializeVariables() |==> <NO-OP>
10:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):159:setInternalEntity(intern("amp"), "&#38;") |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):160:setInternalEntity(intern("lt"), "&#60;") |==> <NO-OP>
12:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):161:setInternalEntity(intern("gt"), "&#62;") |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):162:setInternalEntity(intern("apos"), "&#39;") |==> <NO-OP>
14:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):163:setInternalEntity(intern("quot"), "&#34;") |==> <NO-OP>
15:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):165:handler != null |==> true
16:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):166:handler.startDocument() |==> <NO-OP>
17:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):169:pushURL("[document]", basePublicId, baseURI, baseReader, baseInputStream, encoding) |==> <NO-OP>
18:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):172:parseDocument() |==> <NO-OP>
19:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):174:handler != null |==> true
20:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):175:handler.endDocument() |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):177:cleanupVariables() |==> <NO-OP>
22:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser:331:attributeTypeHash = new Hashtable() |==> <NO-OP>
23:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:332:attributeTypeHash.put("CDATA", new Integer(ATTRIBUTE_CDATA)) |==> <NO-OP>
24:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:333:attributeTypeHash.put("ID", new Integer(ATTRIBUTE_ID)) |==> <NO-OP>
25:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:334:attributeTypeHash.put("IDREF", new Integer(ATTRIBUTE_IDREF)) |==> <NO-OP>
26:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:335:attributeTypeHash.put("IDREFS", new Integer(ATTRIBUTE_IDREFS)) |==> <NO-OP>
27:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:336:attributeTypeHash.put("ENTITY", new Integer(ATTRIBUTE_ENTITY)) |==> <NO-OP>
28:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:337:attributeTypeHash.put("ENTITIES", new Integer(ATTRIBUTE_ENTITIES)) |==> <NO-OP>
29:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:338:attributeTypeHash.put("NMTOKEN", new Integer(ATTRIBUTE_NMTOKEN)) |==> <NO-OP>
30:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:339:attributeTypeHash.put("NMTOKENS", new Integer(ATTRIBUTE_NMTOKENS)) |==> <NO-OP>
31:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser:340:attributeTypeHash.put("NOTATION", new Integer(ATTRIBUTE_NOTATION)) |==> <NO-OP>
32:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):439:errorCount++ |==> <NO-OP>
33:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):440:textFound != null |==> true
34:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):441:message = message + " (found \"" + textFound + "\")" |==> <NO-OP>
35:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):443:textExpected != null |==> true
36:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):444:message = message + " (expected \"" + textExpected + "\")" |==> <NO-OP>
37:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):446:handler != null |==> true
38:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):449:externalEntity != null |==> true
39:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):450:uri = externalEntity.getURL().toString() |==> <NO-OP>
40:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,java.lang.String,java.lang.String):452:handler.error(message, uri, line, column) |==> <NO-OP>
41:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@error(java.lang.String,char,java.lang.String):465:error(message, new Character(textFound).toString(), textExpected) |==> <NO-OP>
42:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():490:parseProlog() |==> <NO-OP>
43:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():491:require('<') |==> <NO-OP>
44:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():492:parseElement() |==> <NO-OP>
45:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():495:parseMisc() |==> <NO-OP>
46:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseDocument():496:readCh() |==> 0
47:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():497:error("unexpected characters after document end", c, null) |==> <NO-OP>
48:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseDocument():500:return; |==> <NO-OP>
49:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseComment():514:skipUntil("-->") |==> <NO-OP>
50:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parsePI():532:true |==> false
51:COR:tryRead("?>"):TRUE:com.microstar.xml.XmlParser@parsePI():533:tryRead("?>") |==> false
52:COR:tryRead("?>"):FALSE:com.microstar.xml.XmlParser@parsePI():533:tryRead("?>") |==> true
53:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePI():534:requireWhitespace() |==> <NO-OP>
54:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePI():535:parseUntil("?>") |==> <NO-OP>
55:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parsePI():537:handler != null |==> true
56:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePI():538:handler.processingInstruction(name, dataBufferToString()) |==> <NO-OP>
57:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCDSect():558:parseUntil("]]>") |==> <NO-OP>
58:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseProlog():579:parseMisc() |==> <NO-OP>
59:COR:tryRead("<!DOCTYPE"):TRUE:com.microstar.xml.XmlParser@parseProlog():581:tryRead("<!DOCTYPE") |==> false
60:COR:tryRead("<!DOCTYPE"):FALSE:com.microstar.xml.XmlParser@parseProlog():581:tryRead("<!DOCTYPE") |==> true
61:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseProlog():582:parseDoctypedecl() |==> <NO-OP>
62:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseProlog():583:parseMisc() |==> <NO-OP>
63:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):611:require("version") |==> <NO-OP>
64:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):612:parseEq() |==> <NO-OP>
65:LVR:0:POS:com.microstar.xml.XmlParser@parseXMLDecl(boolean):613:0 |==> 1
66:LVR:0:NEG:com.microstar.xml.XmlParser@parseXMLDecl(boolean):613:0 |==> -1
67:COR:version.equals("1.0"):TRUE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):614:version.equals("1.0") |==> false
68:COR:version.equals("1.0"):FALSE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):614:version.equals("1.0") |==> true
69:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):615:error("unsupported XML version", version, "1.0") |==> <NO-OP>
70:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):619:skipWhitespace() |==> <NO-OP>
71:COR:tryRead("encoding"):TRUE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):620:tryRead("encoding") |==> false
72:COR:tryRead("encoding"):FALSE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):620:tryRead("encoding") |==> true
73:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):621:parseEq() |==> <NO-OP>
74:LVR:0:POS:com.microstar.xml.XmlParser@parseXMLDecl(boolean):622:0 |==> 1
75:LVR:0:NEG:com.microstar.xml.XmlParser@parseXMLDecl(boolean):622:0 |==> -1
76:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):622:encodingName = readLiteral(0) |==> <NO-OP>
77:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):623:checkEncoding(encodingName, ignoreEncoding) |==> <NO-OP>
78:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):627:skipWhitespace() |==> <NO-OP>
79:COR:tryRead("standalone"):TRUE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):628:tryRead("standalone") |==> false
80:COR:tryRead("standalone"):FALSE:com.microstar.xml.XmlParser@parseXMLDecl(boolean):628:tryRead("standalone") |==> true
81:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):629:parseEq() |==> <NO-OP>
82:LVR:0:POS:com.microstar.xml.XmlParser@parseXMLDecl(boolean):630:0 |==> 1
83:LVR:0:NEG:com.microstar.xml.XmlParser@parseXMLDecl(boolean):630:0 |==> -1
84:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):630:standalone = readLiteral(0) |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):633:skipWhitespace() |==> <NO-OP>
86:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseXMLDecl(boolean):634:require("?>") |==> <NO-OP>
87:COR:tryRead("version"):TRUE:com.microstar.xml.XmlParser@parseTextDecl(boolean):657:tryRead("version") |==> false
88:COR:tryRead("version"):FALSE:com.microstar.xml.XmlParser@parseTextDecl(boolean):657:tryRead("version") |==> true
89:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):659:parseEq() |==> <NO-OP>
90:LVR:0:POS:com.microstar.xml.XmlParser@parseTextDecl(boolean):660:0 |==> 1
91:LVR:0:NEG:com.microstar.xml.XmlParser@parseTextDecl(boolean):660:0 |==> -1
92:COR:version.equals("1.0"):TRUE:com.microstar.xml.XmlParser@parseTextDecl(boolean):661:version.equals("1.0") |==> false
93:COR:version.equals("1.0"):FALSE:com.microstar.xml.XmlParser@parseTextDecl(boolean):661:version.equals("1.0") |==> true
94:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):662:error("unsupported XML version", version, "1.0") |==> <NO-OP>
95:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):664:requireWhitespace() |==> <NO-OP>
96:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):669:require("encoding") |==> <NO-OP>
97:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):670:parseEq() |==> <NO-OP>
98:LVR:0:POS:com.microstar.xml.XmlParser@parseTextDecl(boolean):671:0 |==> 1
99:LVR:0:NEG:com.microstar.xml.XmlParser@parseTextDecl(boolean):671:0 |==> -1
100:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):671:encodingName = readLiteral(0) |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):672:checkEncoding(encodingName, ignoreEncoding) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):674:skipWhitespace() |==> <NO-OP>
103:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseTextDecl(boolean):675:require("?>") |==> <NO-OP>
104:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):693:encodingName = encodingName.toUpperCase() |==> <NO-OP>
105:COR:ignoreEncoding:TRUE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):695:ignoreEncoding |==> false
106:COR:ignoreEncoding:FALSE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):695:ignoreEncoding |==> true
107:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):696:return; |==> <NO-OP>
108:COR:encodingName.equals("ISO-8859-1"):TRUE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):702:encodingName.equals("ISO-8859-1") |==> false
109:COR:encodingName.equals("ISO-8859-1"):FALSE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):702:encodingName.equals("ISO-8859-1") |==> true
110:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):703:encoding = ENCODING_ISO_8859_1 |==> <NO-OP>
111:COR:encodingName.equals("UTF-8"):TRUE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):704:encodingName.equals("UTF-8") |==> false
112:COR:encodingName.equals("UTF-8"):FALSE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):704:encodingName.equals("UTF-8") |==> true
113:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):705:error("unsupported 8-bit encoding", encodingName, "UTF-8 or ISO-8859-1") |==> <NO-OP>
114:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):709:break; |==> <NO-OP>
115:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):713:!encodingName.equals("ISO-10646-UCS-2") && !encodingName.equals("UTF-16") |==> !encodingName.equals("ISO-10646-UCS-2") == !encodingName.equals("UTF-16")
116:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):713:!encodingName.equals("ISO-10646-UCS-2") && !encodingName.equals("UTF-16") |==> false
117:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):713:!encodingName.equals("ISO-10646-UCS-2") && !encodingName.equals("UTF-16") |==> !encodingName.equals("ISO-10646-UCS-2")
118:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):714:!encodingName.equals("ISO-10646-UCS-2") && !encodingName.equals("UTF-16") |==> !encodingName.equals("UTF-16")
119:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):715:error("unsupported 16-bit encoding", encodingName, "ISO-10646-UCS-2") |==> <NO-OP>
120:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):719:break; |==> <NO-OP>
121:COR:encodingName.equals("ISO-10646-UCS-4"):TRUE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):725:encodingName.equals("ISO-10646-UCS-4") |==> false
122:COR:encodingName.equals("ISO-10646-UCS-4"):FALSE:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):725:encodingName.equals("ISO-10646-UCS-4") |==> true
123:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@checkEncoding(java.lang.String,boolean):726:error("unsupported 32-bit encoding", encodingName, "ISO-10646-UCS-4") |==> <NO-OP>
124:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMisc():746:skipWhitespace() |==> <NO-OP>
125:COR:tryRead("<?"):TRUE:com.microstar.xml.XmlParser@parseMisc():747:tryRead("<?") |==> false
126:COR:tryRead("<?"):FALSE:com.microstar.xml.XmlParser@parseMisc():747:tryRead("<?") |==> true
127:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMisc():748:parsePI() |==> <NO-OP>
128:COR:tryRead("<!--"):TRUE:com.microstar.xml.XmlParser@parseMisc():749:tryRead("<!--") |==> false
129:COR:tryRead("<!--"):FALSE:com.microstar.xml.XmlParser@parseMisc():749:tryRead("<!--") |==> true
130:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMisc():750:parseComment() |==> <NO-OP>
131:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseMisc():752:return; |==> <NO-OP>
132:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():772:requireWhitespace() |==> <NO-OP>
133:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseDoctypedecl():773:true |==> false
134:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():776:skipWhitespace() |==> <NO-OP>
135:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@parseDoctypedecl():777:false |==> true
136:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():780:skipWhitespace() |==> <NO-OP>
137:COR:tryRead('['):TRUE:com.microstar.xml.XmlParser@parseDoctypedecl():781:tryRead('[') |==> false
138:COR:tryRead('['):FALSE:com.microstar.xml.XmlParser@parseDoctypedecl():781:tryRead('[') |==> true
139:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():785:context = CONTEXT_DTD |==> <NO-OP>
140:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():786:skipWhitespace() |==> <NO-OP>
141:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():787:context = CONTEXT_NONE |==> <NO-OP>
142:COR:tryRead(']'):TRUE:com.microstar.xml.XmlParser@parseDoctypedecl():788:tryRead(']') |==> false
143:COR:tryRead(']'):FALSE:com.microstar.xml.XmlParser@parseDoctypedecl():788:tryRead(']') |==> true
144:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():789:break; |==> <NO-OP>
145:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():791:context = CONTEXT_DTD |==> <NO-OP>
146:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():792:parseMarkupdecl() |==> <NO-OP>
147:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():793:context = CONTEXT_NONE |==> <NO-OP>
148:LVR:POS:0:com.microstar.xml.XmlParser@parseDoctypedecl():799:1 |==> 0
149:LVR:POS:NEG:com.microstar.xml.XmlParser@parseDoctypedecl():799:1 |==> -1
150:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseDoctypedecl():799:ids[1] != null |==> true
151:LVR:0:POS:com.microstar.xml.XmlParser@parseDoctypedecl():800:0 |==> 1
152:LVR:0:NEG:com.microstar.xml.XmlParser@parseDoctypedecl():800:0 |==> -1
153:LVR:POS:0:com.microstar.xml.XmlParser@parseDoctypedecl():800:1 |==> 0
154:LVR:POS:NEG:com.microstar.xml.XmlParser@parseDoctypedecl():800:1 |==> -1
155:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():800:pushURL("[external subset]", ids[0], ids[1], null, null, null) |==> <NO-OP>
156:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():804:context = CONTEXT_DTD |==> <NO-OP>
157:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():805:skipWhitespace() |==> <NO-OP>
158:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():806:context = CONTEXT_NONE |==> <NO-OP>
159:COR:tryRead('>'):TRUE:com.microstar.xml.XmlParser@parseDoctypedecl():807:tryRead('>') |==> false
160:COR:tryRead('>'):FALSE:com.microstar.xml.XmlParser@parseDoctypedecl():807:tryRead('>') |==> true
161:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():808:break; |==> <NO-OP>
162:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():810:context = CONTEXT_DTD |==> <NO-OP>
163:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():811:parseMarkupdecl() |==> <NO-OP>
164:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():812:context = CONTEXT_NONE |==> <NO-OP>
165:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():817:skipWhitespace() |==> <NO-OP>
166:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():818:require('>') |==> <NO-OP>
167:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseDoctypedecl():821:handler != null |==> true
168:LVR:0:POS:com.microstar.xml.XmlParser@parseDoctypedecl():822:0 |==> 1
169:LVR:0:NEG:com.microstar.xml.XmlParser@parseDoctypedecl():822:0 |==> -1
170:LVR:POS:0:com.microstar.xml.XmlParser@parseDoctypedecl():822:1 |==> 0
171:LVR:POS:NEG:com.microstar.xml.XmlParser@parseDoctypedecl():822:1 |==> -1
172:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDoctypedecl():822:handler.doctypeDecl(doctypeName, ids[0], ids[1]) |==> <NO-OP>
173:COR:tryRead("<!ELEMENT"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():846:tryRead("<!ELEMENT") |==> false
174:COR:tryRead("<!ELEMENT"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():846:tryRead("<!ELEMENT") |==> true
175:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():847:parseElementdecl() |==> <NO-OP>
176:COR:tryRead("<!ATTLIST"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():848:tryRead("<!ATTLIST") |==> false
177:COR:tryRead("<!ATTLIST"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():848:tryRead("<!ATTLIST") |==> true
178:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():849:parseAttlistDecl() |==> <NO-OP>
179:COR:tryRead("<!ENTITY"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():850:tryRead("<!ENTITY") |==> false
180:COR:tryRead("<!ENTITY"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():850:tryRead("<!ENTITY") |==> true
181:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():851:parseEntityDecl() |==> <NO-OP>
182:COR:tryRead("<!NOTATION"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():852:tryRead("<!NOTATION") |==> false
183:COR:tryRead("<!NOTATION"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():852:tryRead("<!NOTATION") |==> true
184:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():853:parseNotationDecl() |==> <NO-OP>
185:COR:tryRead("<?"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():854:tryRead("<?") |==> false
186:COR:tryRead("<?"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():854:tryRead("<?") |==> true
187:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():855:parsePI() |==> <NO-OP>
188:COR:tryRead("<!--"):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():856:tryRead("<!--") |==> false
189:COR:tryRead("<!--"):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():856:tryRead("<!--") |==> true
190:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():857:parseComment() |==> <NO-OP>
191:COR:tryRead("<!["):TRUE:com.microstar.xml.XmlParser@parseMarkupdecl():858:tryRead("<![") |==> false
192:COR:tryRead("<!["):FALSE:com.microstar.xml.XmlParser@parseMarkupdecl():858:tryRead("<![") |==> true
193:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():859:parseConditionalSect() |==> <NO-OP>
194:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMarkupdecl():861:error("expected markup declaration", null, null) |==> <NO-OP>
195:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElement():883:currentElementContent |==> 0
196:EVR:<IDENTIFIER(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElement():884:currentElement |==> null
197:LVR:0:POS:com.microstar.xml.XmlParser@parseElement():888:0 |==> 1
198:LVR:0:NEG:com.microstar.xml.XmlParser@parseElement():888:0 |==> -1
199:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():888:tagAttributePos = 0 |==> <NO-OP>
200:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseElement():891:true |==> false
201:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():894:currentElement = gi |==> <NO-OP>
202:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():895:currentElementContent = getElementContentType(gi) |==> <NO-OP>
203:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseElement():896:currentElementContent == CONTENT_UNDECLARED |==> currentElementContent <= CONTENT_UNDECLARED
204:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseElement():896:currentElementContent == CONTENT_UNDECLARED |==> currentElementContent >= CONTENT_UNDECLARED
205:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseElement():896:currentElementContent == CONTENT_UNDECLARED |==> false
206:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():897:currentElementContent = CONTENT_ANY |==> <NO-OP>
207:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():903:skipWhitespace() |==> <NO-OP>
208:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElement():904:readCh() |==> 0
209:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '/' |==> c < '/'
210:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '/' |==> c > '/'
211:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '/' |==> true
212:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '>' |==> c < '>'
213:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '>' |==> c > '>'
214:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@parseElement():905:c != '>' |==> true
215:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@parseElement():905:c != '/' && c != '>' |==> c != '/' == (c != '>')
216:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@parseElement():905:c != '/' && c != '>' |==> false
217:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@parseElement():905:c != '/' && c != '>' |==> c != '/'
218:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@parseElement():905:c != '/' && c != '>' |==> c != '>'
219:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():906:unread(c) |==> <NO-OP>
220:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():907:parseAttribute(gi) |==> <NO-OP>
221:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():908:skipWhitespace() |==> <NO-OP>
222:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():909:c = readCh() |==> <NO-OP>
223:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():911:unread(c) |==> <NO-OP>
224:EVR:<METHOD_INVOCATION(java.util.Enumeration)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElement():914:declaredAttributes(gi) |==> null
225:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseElement():915:atts != null |==> true
226:EVR:<TYPE_CAST(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElement():918:(String)atts.nextElement() |==> null
227:LVR:0:POS:com.microstar.xml.XmlParser@parseElement():920:0 |==> 1
228:LVR:0:NEG:com.microstar.xml.XmlParser@parseElement():920:0 |==> -1
229:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@parseElement():920:i < tagAttributePos |==> i != tagAttributePos
230:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@parseElement():920:i < tagAttributePos |==> i <= tagAttributePos
231:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseElement():920:i < tagAttributePos |==> false
232:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseElement():921:tagAttributes[i] == aname |==> false
233:STD:<CONT>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():922:continue loop; |==> <NO-OP>
234:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseElement():926:handler != null |==> true
235:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@parseElement():929:false |==> true
236:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():927:handler.attribute(aname, getAttributeExpandedValue(gi, aname), false) |==> <NO-OP>
237:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():937:c = readCh() |==> <NO-OP>
238:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseElement():940:handler != null |==> true
239:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():941:handler.startElement(gi) |==> <NO-OP>
240:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():943:parseContent() |==> <NO-OP>
241:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():944:break; |==> <NO-OP>
242:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():946:require('>') |==> <NO-OP>
243:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseElement():947:handler != null |==> true
244:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():948:handler.startElement(gi) |==> <NO-OP>
245:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():949:handler.endElement(gi) |==> <NO-OP>
246:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():951:break; |==> <NO-OP>
247:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():955:currentElement = oldElement |==> <NO-OP>
248:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElement():956:currentElementContent = oldElementContent |==> <NO-OP>
249:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):976:true |==> false
250:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):977:getAttributeDefaultValueType(name, aname) |==> 0
251:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):980:parseEq() |==> <NO-OP>
252:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA |==> type <= ATTRIBUTE_CDATA
253:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA |==> type >= ATTRIBUTE_CDATA
254:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA |==> false
255:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_UNDECLARED |==> type <= ATTRIBUTE_UNDECLARED
256:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_UNDECLARED |==> type >= ATTRIBUTE_UNDECLARED
257:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_UNDECLARED |==> false
258:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA || type == ATTRIBUTE_UNDECLARED |==> type == ATTRIBUTE_CDATA != (type == ATTRIBUTE_UNDECLARED)
259:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA || type == ATTRIBUTE_UNDECLARED |==> type == ATTRIBUTE_CDATA
260:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA || type == ATTRIBUTE_UNDECLARED |==> type == ATTRIBUTE_UNDECLARED
261:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):984:type == ATTRIBUTE_CDATA || type == ATTRIBUTE_UNDECLARED |==> true
262:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):985:LIT_CHAR_REF | LIT_ENTITY_REF |==> LIT_CHAR_REF & LIT_ENTITY_REF
263:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):985:LIT_CHAR_REF | LIT_ENTITY_REF |==> LIT_CHAR_REF ^ LIT_ENTITY_REF
264:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):987:LIT_CHAR_REF | LIT_ENTITY_REF |==> LIT_CHAR_REF & LIT_ENTITY_REF
265:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):987:LIT_CHAR_REF | LIT_ENTITY_REF |==> LIT_CHAR_REF ^ LIT_ENTITY_REF
266:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):987:LIT_CHAR_REF | LIT_ENTITY_REF | LIT_NORMALIZE |==> (LIT_CHAR_REF | LIT_ENTITY_REF) & LIT_NORMALIZE
267:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):987:LIT_CHAR_REF | LIT_ENTITY_REF | LIT_NORMALIZE |==> (LIT_CHAR_REF | LIT_ENTITY_REF) ^ LIT_NORMALIZE
268:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):992:handler != null |==> true
269:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):993:true |==> false
270:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):993:handler.attribute(aname, value, true) |==> <NO-OP>
271:LVR:0:POS:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):995:0 |==> 1
272:LVR:0:NEG:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):995:0 |==> -1
273:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):995:dataBufferPos = 0 |==> <NO-OP>
274:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):999:tagAttributePos == tagAttributes.length |==> tagAttributePos <= tagAttributes.length
275:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):999:tagAttributePos == tagAttributes.length |==> tagAttributePos >= tagAttributes.length
276:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):999:tagAttributePos == tagAttributes.length |==> false
277:LVR:POS:0:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:2 |==> 0
278:LVR:POS:NEG:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:2 |==> -2
279:AOR:*(int,int):%(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:tagAttributes.length * 2 |==> tagAttributes.length % 2
280:AOR:*(int,int):+(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:tagAttributes.length * 2 |==> tagAttributes.length + 2
281:AOR:*(int,int):-(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:tagAttributes.length * 2 |==> tagAttributes.length - 2
282:AOR:*(int,int):/(int,int):com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1000:tagAttributes.length * 2 |==> tagAttributes.length / 2
283:LVR:0:POS:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1001:0 |==> 1
284:LVR:0:NEG:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1001:0 |==> -1
285:LVR:0:POS:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1001:0 |==> 1
286:LVR:0:NEG:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1001:0 |==> -1
287:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1001:System.arraycopy(tagAttributes, 0, newAttrib, 0, tagAttributePos) |==> <NO-OP>
288:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1002:tagAttributes = newAttrib |==> <NO-OP>
289:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseAttribute(java.lang.String):1004:tagAttributes[tagAttributePos++] = aname |==> <NO-OP>
290:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEq():1015:skipWhitespace() |==> <NO-OP>
291:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEq():1016:require('=') |==> <NO-OP>
292:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEq():1017:skipWhitespace() |==> <NO-OP>
293:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseETag():1030:true |==> false
294:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseETag():1031:name != currentElement |==> true
295:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseETag():1032:error("mismatched end tag", name, currentElement) |==> <NO-OP>
296:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseETag():1034:skipWhitespace() |==> <NO-OP>
297:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseETag():1035:require('>') |==> <NO-OP>
298:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseETag():1036:handler != null |==> true
299:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseETag():1037:handler.endElement(name) |==> <NO-OP>
300:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1058:parsePCData() |==> <NO-OP>
301:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1059:break; |==> <NO-OP>
302:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1061:parseWhitespace() |==> <NO-OP>
303:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1062:break; |==> <NO-OP>
304:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseContent():1066:readCh() |==> 0
305:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1070:c = readCh() |==> <NO-OP>
306:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseContent():1071:c == '#' |==> c <= '#'
307:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseContent():1071:c == '#' |==> c >= '#'
308:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseContent():1071:c == '#' |==> false
309:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1072:parseCharRef() |==> <NO-OP>
310:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1074:unread(c) |==> <NO-OP>
311:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseContent():1075:true |==> false
312:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1075:parseEntityRef(true) |==> <NO-OP>
313:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1077:break; |==> <NO-OP>
314:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1081:c = readCh() |==> <NO-OP>
315:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1085:c = readCh() |==> <NO-OP>
316:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1088:require('-') |==> <NO-OP>
317:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1089:parseComment() |==> <NO-OP>
318:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1090:break; |==> <NO-OP>
319:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1092:require("CDATA[") |==> <NO-OP>
320:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1093:parseCDSect() |==> <NO-OP>
321:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1094:break; |==> <NO-OP>
322:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1096:error("expected comment or CDATA section", c, null) |==> <NO-OP>
323:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1097:break; |==> <NO-OP>
324:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1099:break; |==> <NO-OP>
325:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1102:dataBufferFlush() |==> <NO-OP>
326:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1103:parsePI() |==> <NO-OP>
327:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1104:break; |==> <NO-OP>
328:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1107:dataBufferFlush() |==> <NO-OP>
329:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1108:parseETag() |==> <NO-OP>
330:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1109:return; |==> <NO-OP>
331:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1112:dataBufferFlush() |==> <NO-OP>
332:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1113:unread(c) |==> <NO-OP>
333:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1114:parseElement() |==> <NO-OP>
334:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseContent():1115:break; |==> <NO-OP>
335:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElementdecl():1133:requireWhitespace() |==> <NO-OP>
336:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseElementdecl():1135:true |==> false
337:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElementdecl():1137:requireWhitespace() |==> <NO-OP>
338:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElementdecl():1139:parseContentspec(name) |==> <NO-OP>
339:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElementdecl():1141:skipWhitespace() |==> <NO-OP>
340:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElementdecl():1142:require('>') |==> <NO-OP>
341:COR:tryRead("EMPTY"):TRUE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1153:tryRead("EMPTY") |==> false
342:COR:tryRead("EMPTY"):FALSE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1153:tryRead("EMPTY") |==> true
343:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1154:setElement(name, CONTENT_EMPTY, null, null) |==> <NO-OP>
344:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1155:return; |==> <NO-OP>
345:COR:tryRead("ANY"):TRUE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1156:tryRead("ANY") |==> false
346:COR:tryRead("ANY"):FALSE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1156:tryRead("ANY") |==> true
347:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1157:setElement(name, CONTENT_ANY, null, null) |==> <NO-OP>
348:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1158:return; |==> <NO-OP>
349:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1160:require('(') |==> <NO-OP>
350:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1161:dataBufferAppend('(') |==> <NO-OP>
351:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1162:skipWhitespace() |==> <NO-OP>
352:COR:tryRead("#PCDATA"):TRUE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1163:tryRead("#PCDATA") |==> false
353:COR:tryRead("#PCDATA"):FALSE:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1163:tryRead("#PCDATA") |==> true
354:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1164:dataBufferAppend("#PCDATA") |==> <NO-OP>
355:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1165:parseMixed() |==> <NO-OP>
356:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1166:setElement(name, CONTENT_MIXED, dataBufferToString(), null) |==> <NO-OP>
357:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1168:parseElements() |==> <NO-OP>
358:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseContentspec(java.lang.String):1169:setElement(name, CONTENT_ELEMENTS, dataBufferToString(), null) |==> <NO-OP>
359:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1194:skipWhitespace() |==> <NO-OP>
360:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1195:parseCp() |==> <NO-OP>
361:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1198:skipWhitespace() |==> <NO-OP>
362:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElements():1199:readCh() |==> 0
363:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1202:dataBufferAppend(')') |==> <NO-OP>
364:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1203:c = readCh() |==> <NO-OP>
365:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1208:dataBufferAppend(c) |==> <NO-OP>
366:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1209:break; |==> <NO-OP>
367:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1211:unread(c) |==> <NO-OP>
368:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1213:return; |==> <NO-OP>
369:EVR:<IDENTIFIER(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseElements():1216:c |==> 0
370:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1217:dataBufferAppend(c) |==> <NO-OP>
371:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1218:break; |==> <NO-OP>
372:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1220:error("bad separator in content model", c, null) |==> <NO-OP>
373:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1226:skipWhitespace() |==> <NO-OP>
374:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1227:parseCp() |==> <NO-OP>
375:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1228:skipWhitespace() |==> <NO-OP>
376:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1229:c = readCh() |==> <NO-OP>
377:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseElements():1230:c == ')' |==> c <= ')'
378:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseElements():1230:c == ')' |==> c >= ')'
379:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseElements():1230:c == ')' |==> false
380:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1231:dataBufferAppend(')') |==> <NO-OP>
381:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1232:break; |==> <NO-OP>
382:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@parseElements():1233:c != sep |==> c < sep
383:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@parseElements():1233:c != sep |==> c > sep
384:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@parseElements():1233:c != sep |==> true
385:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1234:error("bad separator in content model", c, null) |==> <NO-OP>
386:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1235:return; |==> <NO-OP>
387:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1237:dataBufferAppend(c) |==> <NO-OP>
388:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1242:c = readCh() |==> <NO-OP>
389:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1247:dataBufferAppend(c) |==> <NO-OP>
390:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1248:return; |==> <NO-OP>
391:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1250:unread(c) |==> <NO-OP>
392:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseElements():1251:return; |==> <NO-OP>
393:COR:tryRead('('):TRUE:com.microstar.xml.XmlParser@parseCp():1267:tryRead('(') |==> false
394:COR:tryRead('('):FALSE:com.microstar.xml.XmlParser@parseCp():1267:tryRead('(') |==> true
395:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1268:dataBufferAppend('(') |==> <NO-OP>
396:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1269:parseElements() |==> <NO-OP>
397:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseCp():1271:true |==> false
398:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1271:dataBufferAppend(readNmtoken(true)) |==> <NO-OP>
399:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseCp():1272:readCh() |==> 0
400:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1277:dataBufferAppend(c) |==> <NO-OP>
401:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1278:break; |==> <NO-OP>
402:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1280:unread(c) |==> <NO-OP>
403:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCp():1281:break; |==> <NO-OP>
404:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1300:skipWhitespace() |==> <NO-OP>
405:COR:tryRead(')'):TRUE:com.microstar.xml.XmlParser@parseMixed():1301:tryRead(')') |==> false
406:COR:tryRead(')'):FALSE:com.microstar.xml.XmlParser@parseMixed():1301:tryRead(')') |==> true
407:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1302:dataBufferAppend(")*") |==> <NO-OP>
408:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1303:tryRead('*') |==> <NO-OP>
409:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1304:return; |==> <NO-OP>
410:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1308:skipWhitespace() |==> <NO-OP>
411:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1310:require('|') |==> <NO-OP>
412:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1311:dataBufferAppend('|') |==> <NO-OP>
413:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1312:skipWhitespace() |==> <NO-OP>
414:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseMixed():1313:true |==> false
415:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1313:dataBufferAppend(readNmtoken(true)) |==> <NO-OP>
416:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1314:skipWhitespace() |==> <NO-OP>
417:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseMixed():1316:dataBufferAppend(")*") |==> <NO-OP>
418:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttlistDecl():1330:requireWhitespace() |==> <NO-OP>
419:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseAttlistDecl():1331:true |==> false
420:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttlistDecl():1332:requireWhitespace() |==> <NO-OP>
421:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttlistDecl():1334:parseAttDef(elementName) |==> <NO-OP>
422:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttlistDecl():1335:skipWhitespace() |==> <NO-OP>
423:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1352:true |==> false
424:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1355:requireWhitespace() |==> <NO-OP>
425:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1356:readAttType() |==> 0
426:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED |==> type <= ATTRIBUTE_ENUMERATED
427:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED |==> type >= ATTRIBUTE_ENUMERATED
428:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED |==> false
429:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_NOTATION |==> type <= ATTRIBUTE_NOTATION
430:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_NOTATION |==> type >= ATTRIBUTE_NOTATION
431:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_NOTATION |==> false
432:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED || type == ATTRIBUTE_NOTATION |==> type == ATTRIBUTE_ENUMERATED != (type == ATTRIBUTE_NOTATION)
433:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED || type == ATTRIBUTE_NOTATION |==> type == ATTRIBUTE_ENUMERATED
434:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED || type == ATTRIBUTE_NOTATION |==> type == ATTRIBUTE_NOTATION
435:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1360:type == ATTRIBUTE_ENUMERATED || type == ATTRIBUTE_NOTATION |==> true
436:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1361:enumeration = dataBufferToString() |==> <NO-OP>
437:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1365:requireWhitespace() |==> <NO-OP>
438:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseAttDef(java.lang.String):1366:parseDefault(elementName, name, type, enumeration) |==> <NO-OP>
439:COR:tryRead('('):TRUE:com.microstar.xml.XmlParser@readAttType():1385:tryRead('(') |==> false
440:COR:tryRead('('):FALSE:com.microstar.xml.XmlParser@readAttType():1385:tryRead('(') |==> true
441:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readAttType():1386:parseEnumeration() |==> <NO-OP>
442:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readAttType():1387:ATTRIBUTE_ENUMERATED |==> 0
443:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@readAttType():1389:true |==> false
444:COR:typeString.equals("NOTATION"):TRUE:com.microstar.xml.XmlParser@readAttType():1390:typeString.equals("NOTATION") |==> false
445:COR:typeString.equals("NOTATION"):FALSE:com.microstar.xml.XmlParser@readAttType():1390:typeString.equals("NOTATION") |==> true
446:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readAttType():1391:parseNotationType() |==> <NO-OP>
447:EVR:<TYPE_CAST(java.lang.Integer)>:<DEFAULT>:com.microstar.xml.XmlParser@readAttType():1393:(Integer)attributeTypeHash.get(typeString) |==> null
448:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@readAttType():1394:type == null |==> false
449:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readAttType():1395:error("illegal attribute type", typeString, null) |==> <NO-OP>
450:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readAttType():1396:ATTRIBUTE_UNDECLARED |==> 0
451:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readAttType():1398:type.intValue() |==> 0
452:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1415:dataBufferAppend('(') |==> <NO-OP>
453:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1418:skipWhitespace() |==> <NO-OP>
454:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEnumeration():1419:true |==> false
455:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1419:dataBufferAppend(readNmtoken(true)) |==> <NO-OP>
456:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1421:skipWhitespace() |==> <NO-OP>
457:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1423:require('|') |==> <NO-OP>
458:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1424:dataBufferAppend('|') |==> <NO-OP>
459:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1425:skipWhitespace() |==> <NO-OP>
460:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEnumeration():1426:true |==> false
461:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1426:dataBufferAppend(readNmtoken(true)) |==> <NO-OP>
462:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1427:skipWhitespace() |==> <NO-OP>
463:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEnumeration():1429:dataBufferAppend(')') |==> <NO-OP>
464:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationType():1443:requireWhitespace() |==> <NO-OP>
465:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationType():1444:require('(') |==> <NO-OP>
466:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationType():1446:parseEnumeration() |==> <NO-OP>
467:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1457:ATTRIBUTE_DEFAULT_SPECIFIED |==> 0
468:COR:tryRead('#'):TRUE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1461:tryRead('#') |==> false
469:COR:tryRead('#'):FALSE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1461:tryRead('#') |==> true
470:COR:tryRead("FIXED"):TRUE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1462:tryRead("FIXED") |==> false
471:COR:tryRead("FIXED"):FALSE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1462:tryRead("FIXED") |==> true
472:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1463:valueType = ATTRIBUTE_DEFAULT_FIXED |==> <NO-OP>
473:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1464:requireWhitespace() |==> <NO-OP>
474:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1465:context = CONTEXT_ATTRIBUTEVALUE |==> <NO-OP>
475:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1466:value = readLiteral(LIT_CHAR_REF) |==> <NO-OP>
476:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1467:context = CONTEXT_DTD |==> <NO-OP>
477:COR:tryRead("REQUIRED"):TRUE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1468:tryRead("REQUIRED") |==> false
478:COR:tryRead("REQUIRED"):FALSE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1468:tryRead("REQUIRED") |==> true
479:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1469:valueType = ATTRIBUTE_DEFAULT_REQUIRED |==> <NO-OP>
480:COR:tryRead("IMPLIED"):TRUE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1470:tryRead("IMPLIED") |==> false
481:COR:tryRead("IMPLIED"):FALSE:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1470:tryRead("IMPLIED") |==> true
482:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1471:valueType = ATTRIBUTE_DEFAULT_IMPLIED |==> <NO-OP>
483:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1473:error("illegal keyword for attribute default value", null, null) |==> <NO-OP>
484:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1476:context = CONTEXT_ATTRIBUTEVALUE |==> <NO-OP>
485:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1477:value = readLiteral(LIT_CHAR_REF) |==> <NO-OP>
486:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1478:context = CONTEXT_DTD |==> <NO-OP>
487:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseDefault(java.lang.String,java.lang.String,int,java.lang.String):1480:setAttribute(elementName, name, type, enumeration, value, valueType) |==> <NO-OP>
488:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1499:skipWhitespace() |==> <NO-OP>
489:COR:tryRead("INCLUDE"):TRUE:com.microstar.xml.XmlParser@parseConditionalSect():1500:tryRead("INCLUDE") |==> false
490:COR:tryRead("INCLUDE"):FALSE:com.microstar.xml.XmlParser@parseConditionalSect():1500:tryRead("INCLUDE") |==> true
491:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1501:skipWhitespace() |==> <NO-OP>
492:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1502:require('[') |==> <NO-OP>
493:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1503:skipWhitespace() |==> <NO-OP>
494:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1505:parseMarkupdecl() |==> <NO-OP>
495:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1506:skipWhitespace() |==> <NO-OP>
496:COR:tryRead("IGNORE"):TRUE:com.microstar.xml.XmlParser@parseConditionalSect():1508:tryRead("IGNORE") |==> false
497:COR:tryRead("IGNORE"):FALSE:com.microstar.xml.XmlParser@parseConditionalSect():1508:tryRead("IGNORE") |==> true
498:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1509:skipWhitespace() |==> <NO-OP>
499:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1510:require('[') |==> <NO-OP>
500:LVR:POS:0:com.microstar.xml.XmlParser@parseConditionalSect():1511:1 |==> 0
501:LVR:POS:NEG:com.microstar.xml.XmlParser@parseConditionalSect():1511:1 |==> -1
502:LVR:POS:0:com.microstar.xml.XmlParser@parseConditionalSect():1513:1 |==> 0
503:LVR:POS:NEG:com.microstar.xml.XmlParser@parseConditionalSect():1513:1 |==> -1
504:LVR:0:POS:com.microstar.xml.XmlParser@parseConditionalSect():1513:0 |==> 1
505:LVR:0:NEG:com.microstar.xml.XmlParser@parseConditionalSect():1513:0 |==> -1
506:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@parseConditionalSect():1513:nest > 0 |==> nest != 0
507:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@parseConditionalSect():1513:nest > 0 |==> nest >= 0
508:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseConditionalSect():1513:nest > 0 |==> false
509:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseConditionalSect():1514:readCh() |==> 0
510:COR:tryRead("!["):TRUE:com.microstar.xml.XmlParser@parseConditionalSect():1517:tryRead("![") |==> false
511:COR:tryRead("!["):FALSE:com.microstar.xml.XmlParser@parseConditionalSect():1517:tryRead("![") |==> true
512:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1518:nest++ |==> <NO-OP>
513:COR:tryRead("]>"):TRUE:com.microstar.xml.XmlParser@parseConditionalSect():1521:tryRead("]>") |==> false
514:COR:tryRead("]>"):FALSE:com.microstar.xml.XmlParser@parseConditionalSect():1521:tryRead("]>") |==> true
515:STD:<DEC>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1522:nest-- |==> <NO-OP>
516:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseConditionalSect():1527:error("conditional section must begin with INCLUDE or IGNORE", null, null) |==> <NO-OP>
517:LVR:0:POS:com.microstar.xml.XmlParser@parseCharRef():1541:0 |==> 1
518:LVR:0:NEG:com.microstar.xml.XmlParser@parseCharRef():1541:0 |==> -1
519:COR:tryRead('x'):TRUE:com.microstar.xml.XmlParser@parseCharRef():1544:tryRead('x') |==> false
520:COR:tryRead('x'):FALSE:com.microstar.xml.XmlParser@parseCharRef():1544:tryRead('x') |==> true
521:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseCharRef():1546:readCh() |==> 0
522:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1570:16 |==> 0
523:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1570:16 |==> -16
524:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1570:value *= 16 |==> <NO-OP>
525:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1571:16 |==> 0
526:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1571:16 |==> -16
527:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1571:value += Integer.parseInt(new Character(c).toString(), 16) |==> <NO-OP>
528:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1572:break; |==> <NO-OP>
529:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1574:break loop1; |==> <NO-OP>
530:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1576:error("illegal character in character reference", c, null) |==> <NO-OP>
531:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1577:break loop1; |==> <NO-OP>
532:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseCharRef():1582:readCh() |==> 0
533:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1594:10 |==> 0
534:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1594:10 |==> -10
535:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1594:value *= 10 |==> <NO-OP>
536:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1595:10 |==> 0
537:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1595:10 |==> -10
538:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1595:value += Integer.parseInt(new Character(c).toString(), 10) |==> <NO-OP>
539:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1596:break; |==> <NO-OP>
540:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1598:break loop2; |==> <NO-OP>
541:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1600:error("illegal character in character reference", c, null) |==> <NO-OP>
542:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1601:break loop2; |==> <NO-OP>
543:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1608:65535 |==> 0
544:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1608:65535 |==> -65535
545:ROR:<=(int,int):<(int,int):com.microstar.xml.XmlParser@parseCharRef():1608:value <= 65535 |==> value < 65535
546:ROR:<=(int,int):==(int,int):com.microstar.xml.XmlParser@parseCharRef():1608:value <= 65535 |==> value == 65535
547:ROR:<=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@parseCharRef():1608:value <= 65535 |==> true
548:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1610:dataBufferAppend((char)value) |==> <NO-OP>
549:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1611:1048575 |==> 0
550:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1611:1048575 |==> -1048575
551:ROR:<=(int,int):<(int,int):com.microstar.xml.XmlParser@parseCharRef():1611:value <= 1048575 |==> value < 1048575
552:ROR:<=(int,int):==(int,int):com.microstar.xml.XmlParser@parseCharRef():1611:value <= 1048575 |==> value == 1048575
553:ROR:<=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@parseCharRef():1611:value <= 1048575 |==> true
554:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1613:216 |==> 0
555:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1613:216 |==> -216
556:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1613:1047552 |==> 0
557:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1613:1047552 |==> -1047552
558:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:value & 1047552 |==> value ^ 1047552
559:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:value & 1047552 |==> value | 1047552
560:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1613:10 |==> 0
561:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1613:10 |==> -10
562:SOR:>>(int,int):<<(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:(value & 1047552) >> 10 |==> (value & 1047552) << 10
563:SOR:>>(int,int):>>>(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:(value & 1047552) >> 10 |==> (value & 1047552) >>> 10
564:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:216 | ((value & 1047552) >> 10) |==> 216 & ((value & 1047552) >> 10)
565:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseCharRef():1613:216 | ((value & 1047552) >> 10) |==> 216 ^ ((value & 1047552) >> 10)
566:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1613:dataBufferAppend((char)(216 | ((value & 1047552) >> 10))) |==> <NO-OP>
567:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1614:220 |==> 0
568:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1614:220 |==> -220
569:LVR:POS:0:com.microstar.xml.XmlParser@parseCharRef():1614:1023 |==> 0
570:LVR:POS:NEG:com.microstar.xml.XmlParser@parseCharRef():1614:1023 |==> -1023
571:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@parseCharRef():1614:value & 1023 |==> value ^ 1023
572:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@parseCharRef():1614:value & 1023 |==> value | 1023
573:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseCharRef():1614:220 | (value & 1023) |==> 220 & (value & 1023)
574:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseCharRef():1614:220 | (value & 1023) |==> 220 ^ (value & 1023)
575:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1614:dataBufferAppend((char)(220 | (value & 1023))) |==> <NO-OP>
576:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseCharRef():1617:error("character reference " + value + " is too large for UTF-16", new Integer(value).toString(), null) |==> <NO-OP>
577:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEntityRef(boolean):1634:true |==> false
578:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1635:require(';') |==> <NO-OP>
579:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1638:error("reference to undeclared entity", name, null) |==> <NO-OP>
580:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1639:break; |==> <NO-OP>
581:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1641:pushString(name, getEntityValue(name)) |==> <NO-OP>
582:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1642:break; |==> <NO-OP>
583:COR:externalAllowed:TRUE:com.microstar.xml.XmlParser@parseEntityRef(boolean):1644:externalAllowed |==> false
584:COR:externalAllowed:FALSE:com.microstar.xml.XmlParser@parseEntityRef(boolean):1644:externalAllowed |==> true
585:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1645:pushURL(name, getEntityPublicId(name), getEntitySystemId(name), null, null, null) |==> <NO-OP>
586:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1649:error("reference to external entity in attribute value.", name, null) |==> <NO-OP>
587:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1651:break; |==> <NO-OP>
588:COR:externalAllowed:TRUE:com.microstar.xml.XmlParser@parseEntityRef(boolean):1653:externalAllowed |==> false
589:COR:externalAllowed:FALSE:com.microstar.xml.XmlParser@parseEntityRef(boolean):1653:externalAllowed |==> true
590:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1654:error("data entity reference in content", name, null) |==> <NO-OP>
591:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1656:error("reference to external entity in attribute value.", name, null) |==> <NO-OP>
592:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityRef(boolean):1658:break; |==> <NO-OP>
593:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parsePEReference(boolean):1673:true |==> false
594:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1674:require(';') |==> <NO-OP>
595:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1677:error("reference to undeclared parameter entity", name, null) |==> <NO-OP>
596:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1678:break; |==> <NO-OP>
597:COR:isEntityValue:TRUE:com.microstar.xml.XmlParser@parsePEReference(boolean):1680:isEntityValue |==> false
598:COR:isEntityValue:FALSE:com.microstar.xml.XmlParser@parsePEReference(boolean):1680:isEntityValue |==> true
599:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1681:pushString(name, getEntityValue(name)) |==> <NO-OP>
600:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1683:pushString(name, " " + getEntityValue(name) + ' ') |==> <NO-OP>
601:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1685:break; |==> <NO-OP>
602:COR:isEntityValue:TRUE:com.microstar.xml.XmlParser@parsePEReference(boolean):1687:isEntityValue |==> false
603:COR:isEntityValue:FALSE:com.microstar.xml.XmlParser@parsePEReference(boolean):1687:isEntityValue |==> true
604:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1688:pushString(null, " ") |==> <NO-OP>
605:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1690:pushURL(name, getEntityPublicId(name), getEntitySystemId(name), null, null, null) |==> <NO-OP>
606:COR:isEntityValue:TRUE:com.microstar.xml.XmlParser@parsePEReference(boolean):1693:isEntityValue |==> false
607:COR:isEntityValue:FALSE:com.microstar.xml.XmlParser@parsePEReference(boolean):1693:isEntityValue |==> true
608:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1694:pushString(null, " ") |==> <NO-OP>
609:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parsePEReference(boolean):1696:break; |==> <NO-OP>
610:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@parseEntityDecl():1716:false |==> true
611:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1720:requireWhitespace() |==> <NO-OP>
612:COR:tryRead('%'):TRUE:com.microstar.xml.XmlParser@parseEntityDecl():1721:tryRead('%') |==> false
613:COR:tryRead('%'):FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1721:tryRead('%') |==> true
614:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1722:true |==> false
615:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1722:peFlag = true |==> <NO-OP>
616:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1723:requireWhitespace() |==> <NO-OP>
617:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1728:true |==> false
618:COR:peFlag:TRUE:com.microstar.xml.XmlParser@parseEntityDecl():1729:peFlag |==> false
619:COR:peFlag:FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1729:peFlag |==> true
620:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1730:name = "%" + name |==> <NO-OP>
621:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1734:requireWhitespace() |==> <NO-OP>
622:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseEntityDecl():1735:readCh() |==> 0
623:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1736:unread(c) |==> <NO-OP>
624:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' |==> c <= '\"'
625:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' |==> c >= '\"'
626:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' |==> false
627:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\'' |==> c <= '\''
628:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\'' |==> c >= '\''
629:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\'' |==> false
630:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' || c == '\'' |==> c == '\"' != (c == '\'')
631:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' || c == '\'' |==> c == '\"'
632:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' || c == '\'' |==> c == '\''
633:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@parseEntityDecl():1737:c == '\"' || c == '\'' |==> true
634:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1739:context = CONTEXT_ENTITYVALUE |==> <NO-OP>
635:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1740:LIT_CHAR_REF | LIT_PE_REF |==> LIT_CHAR_REF & LIT_PE_REF
636:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@parseEntityDecl():1740:LIT_CHAR_REF | LIT_PE_REF |==> LIT_CHAR_REF ^ LIT_PE_REF
637:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1741:context = CONTEXT_DTD |==> <NO-OP>
638:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1742:setInternalEntity(name, value) |==> <NO-OP>
639:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@parseEntityDecl():1745:false |==> true
640:LVR:POS:0:com.microstar.xml.XmlParser@parseEntityDecl():1746:1 |==> 0
641:LVR:POS:NEG:com.microstar.xml.XmlParser@parseEntityDecl():1746:1 |==> -1
642:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseEntityDecl():1746:ids[1] == null |==> false
643:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1747:error("system identifer missing", name, null) |==> <NO-OP>
644:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1751:skipWhitespace() |==> <NO-OP>
645:COR:tryRead("NDATA"):TRUE:com.microstar.xml.XmlParser@parseEntityDecl():1752:tryRead("NDATA") |==> false
646:COR:tryRead("NDATA"):FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1752:tryRead("NDATA") |==> true
647:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1753:requireWhitespace() |==> <NO-OP>
648:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseEntityDecl():1754:true |==> false
649:LVR:0:POS:com.microstar.xml.XmlParser@parseEntityDecl():1755:0 |==> 1
650:LVR:0:NEG:com.microstar.xml.XmlParser@parseEntityDecl():1755:0 |==> -1
651:LVR:POS:0:com.microstar.xml.XmlParser@parseEntityDecl():1755:1 |==> 0
652:LVR:POS:NEG:com.microstar.xml.XmlParser@parseEntityDecl():1755:1 |==> -1
653:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1755:setExternalDataEntity(name, ids[0], ids[1], notationName) |==> <NO-OP>
654:LVR:0:POS:com.microstar.xml.XmlParser@parseEntityDecl():1757:0 |==> 1
655:LVR:0:NEG:com.microstar.xml.XmlParser@parseEntityDecl():1757:0 |==> -1
656:LVR:POS:0:com.microstar.xml.XmlParser@parseEntityDecl():1757:1 |==> 0
657:LVR:POS:NEG:com.microstar.xml.XmlParser@parseEntityDecl():1757:1 |==> -1
658:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1757:setExternalTextEntity(name, ids[0], ids[1]) |==> <NO-OP>
659:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1762:skipWhitespace() |==> <NO-OP>
660:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseEntityDecl():1763:require('>') |==> <NO-OP>
661:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1778:requireWhitespace() |==> <NO-OP>
662:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseNotationDecl():1779:true |==> false
663:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1781:requireWhitespace() |==> <NO-OP>
664:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@parseNotationDecl():1784:true |==> false
665:LVR:0:POS:com.microstar.xml.XmlParser@parseNotationDecl():1785:0 |==> 1
666:LVR:0:NEG:com.microstar.xml.XmlParser@parseNotationDecl():1785:0 |==> -1
667:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[0] == null |==> false
668:LVR:POS:0:com.microstar.xml.XmlParser@parseNotationDecl():1785:1 |==> 0
669:LVR:POS:NEG:com.microstar.xml.XmlParser@parseNotationDecl():1785:1 |==> -1
670:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[1] == null |==> false
671:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[0] == null && ids[1] == null |==> ids[0] == null == (ids[1] == null)
672:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[0] == null && ids[1] == null |==> false
673:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[0] == null && ids[1] == null |==> ids[0] == null
674:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@parseNotationDecl():1785:ids[0] == null && ids[1] == null |==> ids[1] == null
675:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1786:error("external identifer missing", nname, null) |==> <NO-OP>
676:LVR:0:POS:com.microstar.xml.XmlParser@parseNotationDecl():1790:0 |==> 1
677:LVR:0:NEG:com.microstar.xml.XmlParser@parseNotationDecl():1790:0 |==> -1
678:LVR:POS:0:com.microstar.xml.XmlParser@parseNotationDecl():1790:1 |==> 0
679:LVR:POS:NEG:com.microstar.xml.XmlParser@parseNotationDecl():1790:1 |==> -1
680:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1790:setNotation(nname, ids[0], ids[1]) |==> <NO-OP>
681:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1792:skipWhitespace() |==> <NO-OP>
682:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseNotationDecl():1793:require('>') |==> <NO-OP>
683:COR:USE_CHEATS:TRUE:com.microstar.xml.XmlParser@parsePCData():1815:USE_CHEATS |==> false
684:COR:USE_CHEATS:FALSE:com.microstar.xml.XmlParser@parsePCData():1815:USE_CHEATS |==> true
685:LVR:0:POS:com.microstar.xml.XmlParser@parsePCData():1816:0 |==> 1
686:LVR:0:NEG:com.microstar.xml.XmlParser@parsePCData():1816:0 |==> -1
687:LVR:0:POS:com.microstar.xml.XmlParser@parsePCData():1817:0 |==> 1
688:LVR:0:NEG:com.microstar.xml.XmlParser@parsePCData():1817:0 |==> -1
689:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parsePCData():1819:readBufferPos |==> 0
690:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@parsePCData():1819:i < readBufferLength |==> i != readBufferLength
691:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@parsePCData():1819:i < readBufferLength |==> i <= readBufferLength
692:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parsePCData():1819:i < readBufferLength |==> false
693:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1822:lineAugment++ |==> <NO-OP>
694:LVR:0:POS:com.microstar.xml.XmlParser@parsePCData():1823:0 |==> 1
695:LVR:0:NEG:com.microstar.xml.XmlParser@parsePCData():1823:0 |==> -1
696:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1823:columnAugment = 0 |==> <NO-OP>
697:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1824:break; |==> <NO-OP>
698:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@parsePCData():1827:readBufferPos |==> 0
699:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1828:columnAugment++ |==> <NO-OP>
700:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1829:readBufferPos = i |==> <NO-OP>
701:LVR:0:POS:com.microstar.xml.XmlParser@parsePCData():1830:0 |==> 1
702:LVR:0:NEG:com.microstar.xml.XmlParser@parsePCData():1830:0 |==> -1
703:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@parsePCData():1830:lineAugment > 0 |==> lineAugment != 0
704:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@parsePCData():1830:lineAugment > 0 |==> lineAugment >= 0
705:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@parsePCData():1830:lineAugment > 0 |==> false
706:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1831:line += lineAugment |==> <NO-OP>
707:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1832:column = columnAugment |==> <NO-OP>
708:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1834:column += columnAugment |==> <NO-OP>
709:AOR:-(int,int):%(int,int):com.microstar.xml.XmlParser@parsePCData():1836:i - start |==> i % start
710:AOR:-(int,int):*(int,int):com.microstar.xml.XmlParser@parsePCData():1836:i - start |==> i * start
711:AOR:-(int,int):+(int,int):com.microstar.xml.XmlParser@parsePCData():1836:i - start |==> i + start
712:AOR:-(int,int):/(int,int):com.microstar.xml.XmlParser@parsePCData():1836:i - start |==> i / start
713:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1836:dataBufferAppend(readBuffer, start, i - start) |==> <NO-OP>
714:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1837:return; |==> <NO-OP>
715:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1839:columnAugment++ |==> <NO-OP>
716:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parsePCData():1847:readCh() |==> 0
717:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1851:unread(c) |==> <NO-OP>
718:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1852:return; |==> <NO-OP>
719:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1854:dataBufferAppend(c) |==> <NO-OP>
720:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@parsePCData():1855:break; |==> <NO-OP>
721:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@requireWhitespace():1873:readCh() |==> 0
722:COR:isWhitespace(c):TRUE:com.microstar.xml.XmlParser@requireWhitespace():1874:isWhitespace(c) |==> false
723:COR:isWhitespace(c):FALSE:com.microstar.xml.XmlParser@requireWhitespace():1874:isWhitespace(c) |==> true
724:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@requireWhitespace():1875:skipWhitespace() |==> <NO-OP>
725:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@requireWhitespace():1877:error("whitespace expected", c, null) |==> <NO-OP>
726:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@parseWhitespace():1888:readCh() |==> 0
727:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseWhitespace():1890:dataBufferAppend(c) |==> <NO-OP>
728:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@parseWhitespace():1891:c = readCh() |==> <NO-OP>
729:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@parseWhitespace():1893:unread(c) |==> <NO-OP>
730:COR:USE_CHEATS:TRUE:com.microstar.xml.XmlParser@skipWhitespace():1908:USE_CHEATS |==> false
731:COR:USE_CHEATS:FALSE:com.microstar.xml.XmlParser@skipWhitespace():1908:USE_CHEATS |==> true
732:LVR:0:POS:com.microstar.xml.XmlParser@skipWhitespace():1909:0 |==> 1
733:LVR:0:NEG:com.microstar.xml.XmlParser@skipWhitespace():1909:0 |==> -1
734:LVR:0:POS:com.microstar.xml.XmlParser@skipWhitespace():1910:0 |==> 1
735:LVR:0:NEG:com.microstar.xml.XmlParser@skipWhitespace():1910:0 |==> -1
736:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@skipWhitespace():1912:readBufferPos |==> 0
737:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1912:i < readBufferLength |==> i != readBufferLength
738:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1912:i < readBufferLength |==> i <= readBufferLength
739:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@skipWhitespace():1912:i < readBufferLength |==> false
740:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1917:columnAugment++ |==> <NO-OP>
741:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1918:break; |==> <NO-OP>
742:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1920:lineAugment++ |==> <NO-OP>
743:LVR:0:POS:com.microstar.xml.XmlParser@skipWhitespace():1921:0 |==> 1
744:LVR:0:NEG:com.microstar.xml.XmlParser@skipWhitespace():1921:0 |==> -1
745:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1921:columnAugment = 0 |==> <NO-OP>
746:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1922:break; |==> <NO-OP>
747:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD |==> context <= CONTEXT_DTD
748:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD |==> context >= CONTEXT_DTD
749:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD |==> false
750:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_ENTITYVALUE |==> context <= CONTEXT_ENTITYVALUE
751:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_ENTITYVALUE |==> context >= CONTEXT_ENTITYVALUE
752:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_ENTITYVALUE |==> false
753:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD != (context == CONTEXT_ENTITYVALUE)
754:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD
755:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_ENTITYVALUE
756:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@skipWhitespace():1924:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> true
757:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1925:break loop; |==> <NO-OP>
758:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1928:readBufferPos = i |==> <NO-OP>
759:LVR:0:POS:com.microstar.xml.XmlParser@skipWhitespace():1929:0 |==> 1
760:LVR:0:NEG:com.microstar.xml.XmlParser@skipWhitespace():1929:0 |==> -1
761:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1929:lineAugment > 0 |==> lineAugment != 0
762:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@skipWhitespace():1929:lineAugment > 0 |==> lineAugment >= 0
763:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@skipWhitespace():1929:lineAugment > 0 |==> false
764:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1930:line += lineAugment |==> <NO-OP>
765:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1931:column = columnAugment |==> <NO-OP>
766:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1933:column += columnAugment |==> <NO-OP>
767:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1935:return; |==> <NO-OP>
768:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@skipWhitespace():1941:readCh() |==> 0
769:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1943:c = readCh() |==> <NO-OP>
770:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@skipWhitespace():1945:unread(c) |==> <NO-OP>
771:COR:USE_CHEATS:TRUE:com.microstar.xml.XmlParser@readNmtoken(boolean):1960:USE_CHEATS |==> false
772:COR:USE_CHEATS:FALSE:com.microstar.xml.XmlParser@readNmtoken(boolean):1960:USE_CHEATS |==> true
773:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readNmtoken(boolean):1961:readBufferPos |==> 0
774:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1961:i < readBufferLength |==> i != readBufferLength
775:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1961:i < readBufferLength |==> i <= readBufferLength
776:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1961:i < readBufferLength |==> false
777:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD |==> context <= CONTEXT_DTD
778:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD |==> context >= CONTEXT_DTD
779:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD |==> false
780:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_ENTITYVALUE |==> context <= CONTEXT_ENTITYVALUE
781:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_ENTITYVALUE |==> context >= CONTEXT_ENTITYVALUE
782:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_ENTITYVALUE |==> false
783:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD != (context == CONTEXT_ENTITYVALUE)
784:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD
785:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_ENTITYVALUE
786:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@readNmtoken(boolean):1964:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> true
787:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):1965:break loop; |==> <NO-OP>
788:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readNmtoken(boolean):1987:readBufferPos |==> 0
789:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1988:i == start |==> i <= start
790:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1988:i == start |==> i >= start
791:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1988:i == start |==> false
792:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):1989:error("name expected", readBuffer[i], null) |==> <NO-OP>
793:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):1991:readBufferPos = i |==> <NO-OP>
794:AOR:-(int,int):%(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1992:i - start |==> i % start
795:AOR:-(int,int):*(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1992:i - start |==> i * start
796:AOR:-(int,int):+(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1992:i - start |==> i + start
797:AOR:-(int,int):/(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):1992:i - start |==> i / start
798:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):1992:return intern(readBuffer, start, Config.__M_NO == 797 ? i / start : Config.__M_NO == 796 ? i + start : Config.__M_NO == 795 ? i * start : Config.__M_NO == 794 ? i % start : Config.__M_NO == 0 && Config.COVERED(794, 797) ? i - start : i - start); |==> <NO-OP>
799:LVR:0:POS:com.microstar.xml.XmlParser@readNmtoken(boolean):1997:0 |==> 1
800:LVR:0:NEG:com.microstar.xml.XmlParser@readNmtoken(boolean):1997:0 |==> -1
801:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):1997:nameBufferPos = 0 |==> <NO-OP>
802:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readNmtoken(boolean):2001:readCh() |==> 0
803:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2023:unread(c) |==> <NO-OP>
804:LVR:0:POS:com.microstar.xml.XmlParser@readNmtoken(boolean):2024:0 |==> 1
805:LVR:0:NEG:com.microstar.xml.XmlParser@readNmtoken(boolean):2024:0 |==> -1
806:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):2024:nameBufferPos == 0 |==> nameBufferPos <= 0
807:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):2024:nameBufferPos == 0 |==> nameBufferPos >= 0
808:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readNmtoken(boolean):2024:nameBufferPos == 0 |==> false
809:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2025:error("name expected", null, null) |==> <NO-OP>
810:LVR:0:POS:com.microstar.xml.XmlParser@readNmtoken(boolean):2027:0 |==> 1
811:LVR:0:NEG:com.microstar.xml.XmlParser@readNmtoken(boolean):2027:0 |==> -1
812:LVR:0:POS:com.microstar.xml.XmlParser@readNmtoken(boolean):2028:0 |==> 1
813:LVR:0:NEG:com.microstar.xml.XmlParser@readNmtoken(boolean):2028:0 |==> -1
814:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2028:nameBufferPos = 0 |==> <NO-OP>
815:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2029:return s; |==> <NO-OP>
816:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2031:nameBuffer = (char[])extendArray(nameBuffer, nameBuffer.length, nameBufferPos) |==> <NO-OP>
817:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readNmtoken(boolean):2033:nameBuffer[nameBufferPos++] = c |==> <NO-OP>
818:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@readLiteral(int):2052:line |==> 0
819:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readLiteral(int):2055:readCh() |==> 0
820:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' |==> delim < '\"'
821:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' |==> delim > '\"'
822:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' |==> true
823:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\'' |==> delim < '\''
824:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\'' |==> delim > '\''
825:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\'' |==> true
826:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' |==> delim != '\"' == (delim != '\'')
827:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' |==> false
828:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' |==> delim != '\"'
829:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' |==> delim != '\''
830:LVR:0:POS:com.microstar.xml.XmlParser@readLiteral(int):2056:0 |==> 1
831:LVR:0:NEG:com.microstar.xml.XmlParser@readLiteral(int):2056:0 |==> -1
832:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != (char)0 |==> delim < (char)0
833:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != (char)0 |==> delim > (char)0
834:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != (char)0 |==> true
835:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' && delim != (char)0 |==> (delim != '\"' && delim != '\'') == (delim != (char)0)
836:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' && delim != (char)0 |==> false
837:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' && delim != (char)0 |==> delim != '\"' && delim != '\''
838:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readLiteral(int):2056:delim != '\"' && delim != '\'' && delim != (char)0 |==> delim != (char)0
839:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2057:error("expected \'\"\' or \"\'\"", delim, null) |==> <NO-OP>
840:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2058:return null; |==> <NO-OP>
841:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readLiteral(int):2063:readCh() |==> 0
842:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@readLiteral(int):2065:c != delim |==> c < delim
843:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@readLiteral(int):2065:c != delim |==> c > delim
844:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2065:c != delim |==> true
845:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2070:c = ' ' |==> <NO-OP>
846:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2071:break; |==> <NO-OP>
847:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@readLiteral(int):2074:flags & LIT_CHAR_REF |==> flags ^ LIT_CHAR_REF
848:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@readLiteral(int):2074:flags & LIT_CHAR_REF |==> flags | LIT_CHAR_REF
849:LVR:0:POS:com.microstar.xml.XmlParser@readLiteral(int):2074:0 |==> 1
850:LVR:0:NEG:com.microstar.xml.XmlParser@readLiteral(int):2074:0 |==> -1
851:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2074:(flags & LIT_CHAR_REF) > 0 |==> (flags & LIT_CHAR_REF) != 0
852:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2074:(flags & LIT_CHAR_REF) > 0 |==> (flags & LIT_CHAR_REF) >= 0
853:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2074:(flags & LIT_CHAR_REF) > 0 |==> false
854:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2075:c = readCh() |==> <NO-OP>
855:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2076:c == '#' |==> c <= '#'
856:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2076:c == '#' |==> c >= '#'
857:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2076:c == '#' |==> false
858:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2077:parseCharRef() |==> <NO-OP>
859:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2078:c = readCh() |==> <NO-OP>
860:STD:<CONT>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2079:continue loop; |==> <NO-OP>
861:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@readLiteral(int):2080:flags & LIT_ENTITY_REF |==> flags ^ LIT_ENTITY_REF
862:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@readLiteral(int):2080:flags & LIT_ENTITY_REF |==> flags | LIT_ENTITY_REF
863:LVR:0:POS:com.microstar.xml.XmlParser@readLiteral(int):2080:0 |==> 1
864:LVR:0:NEG:com.microstar.xml.XmlParser@readLiteral(int):2080:0 |==> -1
865:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2080:(flags & LIT_ENTITY_REF) > 0 |==> (flags & LIT_ENTITY_REF) != 0
866:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2080:(flags & LIT_ENTITY_REF) > 0 |==> (flags & LIT_ENTITY_REF) >= 0
867:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2080:(flags & LIT_ENTITY_REF) > 0 |==> false
868:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2081:unread(c) |==> <NO-OP>
869:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@readLiteral(int):2082:false |==> true
870:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2082:parseEntityRef(false) |==> <NO-OP>
871:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2083:c = readCh() |==> <NO-OP>
872:STD:<CONT>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2084:continue loop; |==> <NO-OP>
873:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2086:dataBufferAppend('&') |==> <NO-OP>
874:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2092:break; |==> <NO-OP>
875:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2094:dataBufferAppend(c) |==> <NO-OP>
876:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2095:c = readCh() |==> <NO-OP>
877:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2098:error("end of input while looking for delimiter (started on line " + startLine + ')', null, new Character(delim).toString()) |==> <NO-OP>
878:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@readLiteral(int):2103:flags & LIT_NORMALIZE |==> flags ^ LIT_NORMALIZE
879:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@readLiteral(int):2103:flags & LIT_NORMALIZE |==> flags | LIT_NORMALIZE
880:LVR:0:POS:com.microstar.xml.XmlParser@readLiteral(int):2103:0 |==> 1
881:LVR:0:NEG:com.microstar.xml.XmlParser@readLiteral(int):2103:0 |==> -1
882:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2103:(flags & LIT_NORMALIZE) > 0 |==> (flags & LIT_NORMALIZE) != 0
883:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@readLiteral(int):2103:(flags & LIT_NORMALIZE) > 0 |==> (flags & LIT_NORMALIZE) >= 0
884:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readLiteral(int):2103:(flags & LIT_NORMALIZE) > 0 |==> false
885:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readLiteral(int):2104:dataBufferNormalize() |==> <NO-OP>
886:EVR:<METHOD_INVOCATION(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@readLiteral(int):2108:dataBufferToString() |==> null
887:LVR:POS:0:com.microstar.xml.XmlParser@readExternalIds(boolean):2122:2 |==> 0
888:LVR:POS:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2122:2 |==> -2
889:COR:tryRead("PUBLIC"):TRUE:com.microstar.xml.XmlParser@readExternalIds(boolean):2124:tryRead("PUBLIC") |==> false
890:COR:tryRead("PUBLIC"):FALSE:com.microstar.xml.XmlParser@readExternalIds(boolean):2124:tryRead("PUBLIC") |==> true
891:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2125:requireWhitespace() |==> <NO-OP>
892:LVR:0:POS:com.microstar.xml.XmlParser@readExternalIds(boolean):2126:0 |==> 1
893:LVR:0:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2126:0 |==> -1
894:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2126:ids[0] = readLiteral(LIT_NORMALIZE) |==> <NO-OP>
895:COR:inNotation:TRUE:com.microstar.xml.XmlParser@readExternalIds(boolean):2127:inNotation |==> false
896:COR:inNotation:FALSE:com.microstar.xml.XmlParser@readExternalIds(boolean):2127:inNotation |==> true
897:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2128:skipWhitespace() |==> <NO-OP>
898:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@readExternalIds(boolean):2129:tryRead('\"') || tryRead('\'') |==> tryRead('\"') != tryRead('\'')
899:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readExternalIds(boolean):2129:tryRead('\"') || tryRead('\'') |==> tryRead('\"')
900:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readExternalIds(boolean):2129:tryRead('\"') || tryRead('\'') |==> tryRead('\'')
901:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@readExternalIds(boolean):2129:tryRead('\"') || tryRead('\'') |==> true
902:LVR:POS:0:com.microstar.xml.XmlParser@readExternalIds(boolean):2130:1 |==> 0
903:LVR:POS:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2130:1 |==> -1
904:LVR:0:POS:com.microstar.xml.XmlParser@readExternalIds(boolean):2130:0 |==> 1
905:LVR:0:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2130:0 |==> -1
906:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2130:ids[1] = readLiteral(0) |==> <NO-OP>
907:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2133:requireWhitespace() |==> <NO-OP>
908:LVR:POS:0:com.microstar.xml.XmlParser@readExternalIds(boolean):2134:1 |==> 0
909:LVR:POS:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2134:1 |==> -1
910:LVR:0:POS:com.microstar.xml.XmlParser@readExternalIds(boolean):2134:0 |==> 1
911:LVR:0:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2134:0 |==> -1
912:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2134:ids[1] = readLiteral(0) |==> <NO-OP>
913:COR:tryRead("SYSTEM"):TRUE:com.microstar.xml.XmlParser@readExternalIds(boolean):2136:tryRead("SYSTEM") |==> false
914:COR:tryRead("SYSTEM"):FALSE:com.microstar.xml.XmlParser@readExternalIds(boolean):2136:tryRead("SYSTEM") |==> true
915:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2137:requireWhitespace() |==> <NO-OP>
916:LVR:POS:0:com.microstar.xml.XmlParser@readExternalIds(boolean):2138:1 |==> 0
917:LVR:POS:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2138:1 |==> -1
918:LVR:0:POS:com.microstar.xml.XmlParser@readExternalIds(boolean):2138:0 |==> 1
919:LVR:0:NEG:com.microstar.xml.XmlParser@readExternalIds(boolean):2138:0 |==> -1
920:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readExternalIds(boolean):2138:ids[1] = readLiteral(0) |==> <NO-OP>
921:EVR:<IDENTIFIER(java.lang.String[])>:<DEFAULT>:com.microstar.xml.XmlParser@readExternalIds(boolean):2141:ids |==> null
922:LVR:TRUE:FALSE:com.microstar.xml.XmlParser@isWhitespace(char):2160:true |==> false
923:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@isWhitespace(char):2160:return Config.__M_NO == 0 && Config.COVERED(922, 922) ? true : Config.__M_NO == 922 ? false : true; |==> <NO-OP>
924:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@isWhitespace(char):2162:false |==> true
925:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(char):2179:dataBuffer = (char[])extendArray(dataBuffer, dataBuffer.length, dataBufferPos) |==> <NO-OP>
926:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(char):2181:dataBuffer[dataBufferPos++] = c |==> <NO-OP>
927:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferAppend(java.lang.String):2190:0 |==> 1
928:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferAppend(java.lang.String):2190:0 |==> -1
929:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(java.lang.String):2190:dataBufferAppend(s.toCharArray(), 0, s.length()) |==> <NO-OP>
930:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2201:dataBufferPos + length |==> dataBufferPos % length
931:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2201:dataBufferPos + length |==> dataBufferPos * length
932:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2201:dataBufferPos + length |==> dataBufferPos - length
933:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2201:dataBufferPos + length |==> dataBufferPos / length
934:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2199:dataBuffer = (char[])extendArray(dataBuffer, dataBuffer.length, dataBufferPos + length) |==> <NO-OP>
935:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2202:System.arraycopy((Object)ch, start, (Object)dataBuffer, dataBufferPos, length) |==> <NO-OP>
936:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferAppend(char[],int,int):2205:dataBufferPos += length |==> <NO-OP>
937:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferNormalize():2214:0 |==> 1
938:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferNormalize():2214:0 |==> -1
939:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferNormalize():2215:0 |==> 1
940:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferNormalize():2215:0 |==> -1
941:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@dataBufferNormalize():2216:dataBufferPos |==> 0
942:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end |==> j != end
943:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end |==> j <= end
944:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end |==> false
945:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end && isWhitespace(dataBuffer[j]) |==> j < end == isWhitespace(dataBuffer[j])
946:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end && isWhitespace(dataBuffer[j]) |==> false
947:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end && isWhitespace(dataBuffer[j]) |==> j < end
948:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2219:j < end && isWhitespace(dataBuffer[j]) |==> isWhitespace(dataBuffer[j])
949:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2220:j++ |==> <NO-OP>
950:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j |==> end != j
951:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j |==> end >= j
952:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j |==> false
953:LVR:POS:0:com.microstar.xml.XmlParser@dataBufferNormalize():2224:1 |==> 0
954:LVR:POS:NEG:com.microstar.xml.XmlParser@dataBufferNormalize():2224:1 |==> -1
955:AOR:-(int,int):%(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end - 1 |==> end % 1
956:AOR:-(int,int):*(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end - 1 |==> end * 1
957:AOR:-(int,int):+(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end - 1 |==> end + 1
958:AOR:-(int,int):/(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end - 1 |==> end / 1
959:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j && isWhitespace(dataBuffer[end - 1]) |==> end > j == isWhitespace(dataBuffer[end - 1])
960:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j && isWhitespace(dataBuffer[end - 1]) |==> false
961:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j && isWhitespace(dataBuffer[end - 1]) |==> end > j
962:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2224:end > j && isWhitespace(dataBuffer[end - 1]) |==> isWhitespace(dataBuffer[end - 1])
963:STD:<DEC>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2225:end-- |==> <NO-OP>
964:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2229:j < end |==> j != end
965:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2229:j < end |==> j <= end
966:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2229:j < end |==> false
967:EVR:<ARRAY_ACCESS(char)>:<DEFAULT>:com.microstar.xml.XmlParser@dataBufferNormalize():2231:dataBuffer[j++] |==> 0
968:COR:isWhitespace(c):TRUE:com.microstar.xml.XmlParser@dataBufferNormalize():2235:isWhitespace(c) |==> false
969:COR:isWhitespace(c):FALSE:com.microstar.xml.XmlParser@dataBufferNormalize():2235:isWhitespace(c) |==> true
970:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end |==> j != end
971:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end |==> j <= end
972:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end |==> false
973:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end && isWhitespace(dataBuffer[j++]) |==> j < end == isWhitespace(dataBuffer[j++])
974:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end && isWhitespace(dataBuffer[j++]) |==> false
975:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end && isWhitespace(dataBuffer[j++]) |==> j < end
976:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@dataBufferNormalize():2236:j < end && isWhitespace(dataBuffer[j++]) |==> isWhitespace(dataBuffer[j++])
977:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2238:dataBuffer[i++] = ' ' |==> <NO-OP>
978:LVR:POS:0:com.microstar.xml.XmlParser@dataBufferNormalize():2239:1 |==> 0
979:LVR:POS:NEG:com.microstar.xml.XmlParser@dataBufferNormalize():2239:1 |==> -1
980:AOR:-(int,int):%(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2239:j - 1 |==> j % 1
981:AOR:-(int,int):*(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2239:j - 1 |==> j * 1
982:AOR:-(int,int):+(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2239:j - 1 |==> j + 1
983:AOR:-(int,int):/(int,int):com.microstar.xml.XmlParser@dataBufferNormalize():2239:j - 1 |==> j / 1
984:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2239:dataBuffer[i++] = dataBuffer[j - 1] |==> <NO-OP>
985:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2241:dataBuffer[i++] = c |==> <NO-OP>
986:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferNormalize():2246:dataBufferPos = i |==> <NO-OP>
987:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferToString():2257:0 |==> 1
988:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferToString():2257:0 |==> -1
989:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferToString():2258:0 |==> 1
990:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferToString():2258:0 |==> -1
991:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferToString():2258:dataBufferPos = 0 |==> <NO-OP>
992:EVR:<IDENTIFIER(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@dataBufferToString():2259:s |==> null
993:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferFlush():2270:0 |==> 1
994:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferFlush():2270:0 |==> -1
995:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@dataBufferFlush():2270:dataBufferPos > 0 |==> dataBufferPos != 0
996:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@dataBufferFlush():2270:dataBufferPos > 0 |==> dataBufferPos >= 0
997:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@dataBufferFlush():2270:dataBufferPos > 0 |==> false
998:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2275:break; |==> <NO-OP>
999:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@dataBufferFlush():2278:handler != null |==> true
1000:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferFlush():2279:0 |==> 1
1001:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferFlush():2279:0 |==> -1
1002:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2279:handler.charData(dataBuffer, 0, dataBufferPos) |==> <NO-OP>
1003:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2281:break; |==> <NO-OP>
1004:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@dataBufferFlush():2283:handler != null |==> true
1005:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferFlush():2284:0 |==> 1
1006:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferFlush():2284:0 |==> -1
1007:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2284:handler.ignorableWhitespace(dataBuffer, 0, dataBufferPos) |==> <NO-OP>
1008:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2286:break; |==> <NO-OP>
1009:LVR:0:POS:com.microstar.xml.XmlParser@dataBufferFlush():2288:0 |==> 1
1010:LVR:0:NEG:com.microstar.xml.XmlParser@dataBufferFlush():2288:0 |==> -1
1011:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@dataBufferFlush():2288:dataBufferPos = 0 |==> <NO-OP>
1012:EVR:<METHOD_INVOCATION(char[])>:<DEFAULT>:com.microstar.xml.XmlParser@require(java.lang.String):2299:delim.toCharArray() |==> null
1013:LVR:0:POS:com.microstar.xml.XmlParser@require(java.lang.String):2300:0 |==> 1
1014:LVR:0:NEG:com.microstar.xml.XmlParser@require(java.lang.String):2300:0 |==> -1
1015:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@require(java.lang.String):2300:i < ch.length |==> i != ch.length
1016:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@require(java.lang.String):2300:i < ch.length |==> i <= ch.length
1017:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@require(java.lang.String):2300:i < ch.length |==> false
1018:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@require(java.lang.String):2301:require(ch[i]) |==> <NO-OP>
1019:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@require(char):2312:readCh() |==> 0
1020:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@require(char):2314:c != delim |==> c < delim
1021:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@require(char):2314:c != delim |==> c > delim
1022:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@require(char):2314:c != delim |==> true
1023:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@require(char):2315:error("expected character", c, new Character(delim).toString()) |==> <NO-OP>
1024:EVR:<METHOD_INVOCATION(char[])>:<DEFAULT>:com.microstar.xml.XmlParser@intern(java.lang.String):2338:s.toCharArray() |==> null
1025:LVR:0:POS:com.microstar.xml.XmlParser@intern(java.lang.String):2339:0 |==> 1
1026:LVR:0:NEG:com.microstar.xml.XmlParser@intern(java.lang.String):2339:0 |==> -1
1027:LVR:0:POS:com.microstar.xml.XmlParser@intern(char[],int,int):2358:0 |==> 1
1028:LVR:0:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2358:0 |==> -1
1029:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@intern(char[],int,int):2361:start |==> 0
1030:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:start + length |==> start % length
1031:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:start + length |==> start * length
1032:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:start + length |==> start - length
1033:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:start + length |==> start / length
1034:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:i < start + length |==> i != start + length
1035:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:i < start + length |==> i <= start + length
1036:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2361:i < start + length |==> false
1037:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2362:1 |==> 0
1038:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2362:1 |==> -1
1039:SOR:<<(int,int):>>(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:hash << 1 |==> hash >> 1
1040:SOR:<<(int,int):>>>(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:hash << 1 |==> hash >>> 1
1041:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2362:16777215 |==> 0
1042:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2362:16777215 |==> -16777215
1043:LOR:&(int,int):^(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:(hash << 1) & 16777215 |==> (hash << 1) ^ 16777215
1044:LOR:&(int,int):|(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:(hash << 1) & 16777215 |==> (hash << 1) | 16777215
1045:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:((hash << 1) & 16777215) + (int)ch[i] |==> ((hash << 1) & 16777215) % (int)ch[i]
1046:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:((hash << 1) & 16777215) + (int)ch[i] |==> ((hash << 1) & 16777215) * (int)ch[i]
1047:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:((hash << 1) & 16777215) + (int)ch[i] |==> ((hash << 1) & 16777215) - (int)ch[i]
1048:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2362:((hash << 1) & 16777215) + (int)ch[i] |==> ((hash << 1) & 16777215) / (int)ch[i]
1049:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2362:hash = ((hash << 1) & 16777215) + (int)ch[i] |==> <NO-OP>
1050:AOR:%(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2365:hash % SYMBOL_TABLE_LENGTH |==> hash * SYMBOL_TABLE_LENGTH
1051:AOR:%(int,int):+(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2365:hash % SYMBOL_TABLE_LENGTH |==> hash + SYMBOL_TABLE_LENGTH
1052:AOR:%(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2365:hash % SYMBOL_TABLE_LENGTH |==> hash - SYMBOL_TABLE_LENGTH
1053:AOR:%(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2365:hash % SYMBOL_TABLE_LENGTH |==> hash / SYMBOL_TABLE_LENGTH
1054:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2365:hash = hash % SYMBOL_TABLE_LENGTH |==> <NO-OP>
1055:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@intern(char[],int,int):2368:(Object[])symbolTable[hash] |==> null
1056:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@intern(char[],int,int):2369:bucket == null |==> false
1057:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2370:8 |==> 0
1058:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2370:8 |==> -8
1059:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2370:symbolTable[hash] = bucket = new Object[8] |==> <NO-OP>
1060:LVR:0:POS:com.microstar.xml.XmlParser@intern(char[],int,int):2375:0 |==> 1
1061:LVR:0:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2375:0 |==> -1
1062:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2375:index < bucket.length |==> index != bucket.length
1063:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2375:index < bucket.length |==> index <= bucket.length
1064:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2375:index < bucket.length |==> false
1065:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2375:2 |==> 0
1066:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2375:2 |==> -2
1067:EVR:<TYPE_CAST(char[])>:<DEFAULT>:com.microstar.xml.XmlParser@intern(char[],int,int):2376:(char[])bucket[index] |==> null
1068:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@intern(char[],int,int):2379:chFound == null |==> false
1069:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2380:break; |==> <NO-OP>
1070:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2388:chFound.length == length |==> chFound.length <= length
1071:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2388:chFound.length == length |==> chFound.length >= length
1072:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2388:chFound.length == length |==> false
1073:LVR:0:POS:com.microstar.xml.XmlParser@intern(char[],int,int):2389:0 |==> 1
1074:LVR:0:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2389:0 |==> -1
1075:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2389:i < chFound.length |==> i != chFound.length
1076:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2389:i < chFound.length |==> i <= chFound.length
1077:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2389:i < chFound.length |==> false
1078:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:start + i |==> start % i
1079:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:start + i |==> start * i
1080:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:start + i |==> start - i
1081:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:start + i |==> start / i
1082:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:ch[start + i] != chFound[i] |==> ch[start + i] < chFound[i]
1083:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:ch[start + i] != chFound[i] |==> ch[start + i] > chFound[i]
1084:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2391:ch[start + i] != chFound[i] |==> true
1085:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2392:break; |==> <NO-OP>
1086:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2393:1 |==> 0
1087:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2393:1 |==> -1
1088:AOR:-(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:length - 1 |==> length % 1
1089:AOR:-(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:length - 1 |==> length * 1
1090:AOR:-(int,int):+(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:length - 1 |==> length + 1
1091:AOR:-(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:length - 1 |==> length / 1
1092:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:i == length - 1 |==> i <= length - 1
1093:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:i == length - 1 |==> i >= length - 1
1094:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2393:i == length - 1 |==> false
1095:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2395:1 |==> 0
1096:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2395:1 |==> -1
1097:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2395:index + 1 |==> index % 1
1098:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2395:index + 1 |==> index * 1
1099:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2395:index + 1 |==> index - 1
1100:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2395:index + 1 |==> index / 1
1101:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2395:return (String)bucket[Config.__M_NO == 1100 ? index / 1 : Config.__M_NO == 1099 ? index - 1 : Config.__M_NO == 1098 ? index * 1 : Config.__M_NO == 1097 ? index % 1 : Config.__M_NO == 0 && Config.COVERED(1097, 1100) ? index + 1 : index + (Config.__M_NO == 0 && Config.COVERED(1095, 1096) ? 1 : Config.__M_NO == 1096 ? -1 : Config.__M_NO == 1095 ? 0 : 1)]; |==> <NO-OP>
1102:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2404:bucket = (Object[])extendArray(bucket, bucket.length, index) |==> <NO-OP>
1103:EVR:<NEW_CLASS(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@intern(char[],int,int):2409:new String(ch, start, length) |==> null
1104:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2410:bucket[index] = s.toCharArray() |==> <NO-OP>
1105:LVR:POS:0:com.microstar.xml.XmlParser@intern(char[],int,int):2411:1 |==> 0
1106:LVR:POS:NEG:com.microstar.xml.XmlParser@intern(char[],int,int):2411:1 |==> -1
1107:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2411:index + 1 |==> index % 1
1108:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2411:index + 1 |==> index * 1
1109:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2411:index + 1 |==> index - 1
1110:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@intern(char[],int,int):2411:index + 1 |==> index / 1
1111:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2411:bucket[index + 1] = s |==> <NO-OP>
1112:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@intern(char[],int,int):2412:symbolTable[hash] = bucket |==> <NO-OP>
1113:EVR:<IDENTIFIER(java.lang.String)>:<DEFAULT>:com.microstar.xml.XmlParser@intern(char[],int,int):2413:s |==> null
1114:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2423:requiredSize < currentSize |==> requiredSize != currentSize
1115:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2423:requiredSize < currentSize |==> requiredSize <= currentSize
1116:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2423:requiredSize < currentSize |==> false
1117:EVR:<IDENTIFIER(java.lang.Object)>:<DEFAULT>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2424:array |==> null
1118:LVR:POS:0:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:2 |==> 0
1119:LVR:POS:NEG:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:2 |==> -2
1120:AOR:*(int,int):%(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:currentSize * 2 |==> currentSize % 2
1121:AOR:*(int,int):+(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:currentSize * 2 |==> currentSize + 2
1122:AOR:*(int,int):-(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:currentSize * 2 |==> currentSize - 2
1123:AOR:*(int,int):/(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2427:currentSize * 2 |==> currentSize / 2
1124:ROR:<=(int,int):<(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2429:newSize <= requiredSize |==> newSize < requiredSize
1125:ROR:<=(int,int):==(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2429:newSize <= requiredSize |==> newSize == requiredSize
1126:ROR:<=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2429:newSize <= requiredSize |==> true
1127:LVR:POS:0:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:1 |==> 0
1128:LVR:POS:NEG:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:1 |==> -1
1129:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:requiredSize + 1 |==> requiredSize % 1
1130:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:requiredSize + 1 |==> requiredSize * 1
1131:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:requiredSize + 1 |==> requiredSize - 1
1132:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:requiredSize + 1 |==> requiredSize / 1
1133:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2430:newSize = requiredSize + 1 |==> <NO-OP>
1134:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2434:newArray = new char[newSize] |==> <NO-OP>
1135:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2436:newArray = new Object[newSize] |==> <NO-OP>
1136:LVR:0:POS:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2439:0 |==> 1
1137:LVR:0:NEG:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2439:0 |==> -1
1138:LVR:0:POS:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2439:0 |==> 1
1139:LVR:0:NEG:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2439:0 |==> -1
1140:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2439:System.arraycopy(array, 0, newArray, 0, currentSize) |==> <NO-OP>
1141:EVR:<IDENTIFIER(java.lang.Object)>:<DEFAULT>:com.microstar.xml.XmlParser@extendArray(java.lang.Object,int,int):2440:newArray |==> null
1142:EVR:<METHOD_INVOCATION(java.util.Enumeration)>:<DEFAULT>:com.microstar.xml.XmlParser@declaredElements():2466:elementInfo.keys() |==> null
1143:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getElementContentType(java.lang.String):2483:(Object[])elementInfo.get(name) |==> null
1144:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getElementContentType(java.lang.String):2484:element == null |==> false
1145:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getElementContentType(java.lang.String):2485:CONTENT_UNDECLARED |==> 0
1146:LVR:0:POS:com.microstar.xml.XmlParser@getElementContentType(java.lang.String):2487:0 |==> 1
1147:LVR:0:NEG:com.microstar.xml.XmlParser@getElementContentType(java.lang.String):2487:0 |==> -1
1148:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getElementContentModel(java.lang.String):2502:(Object[])elementInfo.get(name) |==> null
1149:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getElementContentModel(java.lang.String):2503:element == null |==> false
1150:LVR:POS:0:com.microstar.xml.XmlParser@getElementContentModel(java.lang.String):2506:1 |==> 0
1151:LVR:POS:NEG:com.microstar.xml.XmlParser@getElementContentModel(java.lang.String):2506:1 |==> -1
1152:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2524:(Object[])elementInfo.get(name) |==> null
1153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2527:element == null |==> false
1154:LVR:POS:0:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2528:3 |==> 0
1155:LVR:POS:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2528:3 |==> -3
1156:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2528:element = new Object[3] |==> <NO-OP>
1157:LVR:0:POS:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2529:0 |==> 1
1158:LVR:0:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2529:0 |==> -1
1159:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2529:element[0] = new Integer(CONTENT_UNDECLARED) |==> <NO-OP>
1160:LVR:POS:0:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2530:1 |==> 0
1161:LVR:POS:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2530:1 |==> -1
1162:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2530:element[1] = null |==> <NO-OP>
1163:LVR:POS:0:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2531:2 |==> 0
1164:LVR:POS:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2531:2 |==> -2
1165:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2531:element[2] = null |==> <NO-OP>
1166:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED |==> contentType < CONTENT_UNDECLARED
1167:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED |==> contentType > CONTENT_UNDECLARED
1168:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED |==> true
1169:LVR:0:POS:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:0 |==> 1
1170:LVR:0:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:0 |==> -1
1171:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> ((Integer)element[0]).intValue() < CONTENT_UNDECLARED
1172:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> ((Integer)element[0]).intValue() > CONTENT_UNDECLARED
1173:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> true
1174:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED && ((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> contentType != CONTENT_UNDECLARED == (((Integer)element[0]).intValue() != CONTENT_UNDECLARED)
1175:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED && ((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> false
1176:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2532:contentType != CONTENT_UNDECLARED && ((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> contentType != CONTENT_UNDECLARED
1177:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2533:contentType != CONTENT_UNDECLARED && ((Integer)element[0]).intValue() != CONTENT_UNDECLARED |==> ((Integer)element[0]).intValue() != CONTENT_UNDECLARED
1178:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2534:error("multiple declarations for element type", name, null) |==> <NO-OP>
1179:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2535:return; |==> <NO-OP>
1180:ROR:!=(int,int):<(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2539:contentType != CONTENT_UNDECLARED |==> contentType < CONTENT_UNDECLARED
1181:ROR:!=(int,int):>(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2539:contentType != CONTENT_UNDECLARED |==> contentType > CONTENT_UNDECLARED
1182:ROR:!=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2539:contentType != CONTENT_UNDECLARED |==> true
1183:LVR:0:POS:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2540:0 |==> 1
1184:LVR:0:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2540:0 |==> -1
1185:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2540:element[0] = new Integer(contentType) |==> <NO-OP>
1186:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2544:contentModel != null |==> true
1187:LVR:POS:0:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2545:1 |==> 0
1188:LVR:POS:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2545:1 |==> -1
1189:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2545:element[1] = contentModel |==> <NO-OP>
1190:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2549:attributes != null |==> true
1191:LVR:POS:0:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2550:2 |==> 0
1192:LVR:POS:NEG:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2550:2 |==> -2
1193:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2550:element[2] = attributes |==> <NO-OP>
1194:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setElement(java.lang.String,int,java.lang.String,java.util.Hashtable):2554:elementInfo.put(name, element) |==> <NO-OP>
1195:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getElementAttributes(java.lang.String):2564:(Object[])elementInfo.get(name) |==> null
1196:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getElementAttributes(java.lang.String):2565:element == null |==> false
1197:LVR:POS:0:com.microstar.xml.XmlParser@getElementAttributes(java.lang.String):2568:2 |==> 0
1198:LVR:POS:NEG:com.microstar.xml.XmlParser@getElementAttributes(java.lang.String):2568:2 |==> -2
1199:EVR:<METHOD_INVOCATION(java.util.Hashtable)>:<DEFAULT>:com.microstar.xml.XmlParser@declaredAttributes(java.lang.String):2592:getElementAttributes(elname) |==> null
1200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@declaredAttributes(java.lang.String):2594:attlist == null |==> false
1201:EVR:<METHOD_INVOCATION(java.util.Enumeration)>:<DEFAULT>:com.microstar.xml.XmlParser@declaredAttributes(java.lang.String):2597:attlist.keys() |==> null
1202:EVR:<METHOD_INVOCATION(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeType(java.lang.String,java.lang.String):2621:getAttribute(name, aname) |==> null
1203:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeType(java.lang.String,java.lang.String):2622:attribute == null |==> false
1204:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeType(java.lang.String,java.lang.String):2623:ATTRIBUTE_UNDECLARED |==> 0
1205:LVR:0:POS:com.microstar.xml.XmlParser@getAttributeType(java.lang.String,java.lang.String):2625:0 |==> 1
1206:LVR:0:NEG:com.microstar.xml.XmlParser@getAttributeType(java.lang.String,java.lang.String):2625:0 |==> -1
1207:EVR:<METHOD_INVOCATION(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeEnumeration(java.lang.String,java.lang.String):2640:getAttribute(name, aname) |==> null
1208:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeEnumeration(java.lang.String,java.lang.String):2641:attribute == null |==> false
1209:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeEnumeration(java.lang.String,java.lang.String):2644:3 |==> 0
1210:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeEnumeration(java.lang.String,java.lang.String):2644:3 |==> -3
1211:EVR:<METHOD_INVOCATION(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeDefaultValue(java.lang.String,java.lang.String):2659:getAttribute(name, aname) |==> null
1212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeDefaultValue(java.lang.String,java.lang.String):2660:attribute == null |==> false
1213:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeDefaultValue(java.lang.String,java.lang.String):2663:1 |==> 0
1214:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeDefaultValue(java.lang.String,java.lang.String):2663:1 |==> -1
1215:EVR:<METHOD_INVOCATION(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2679:getAttribute(name, aname) |==> null
1216:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2680:attribute == null |==> false
1217:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2681:return null; |==> <NO-OP>
1218:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:4 |==> 0
1219:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:4 |==> -4
1220:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[4] == null |==> false
1221:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:1 |==> 0
1222:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:1 |==> -1
1223:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[1] != null |==> true
1224:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[4] == null && attribute[1] != null |==> attribute[4] == null == (attribute[1] != null)
1225:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[4] == null && attribute[1] != null |==> false
1226:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[4] == null && attribute[1] != null |==> attribute[4] == null
1227:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2682:attribute[4] == null && attribute[1] != null |==> attribute[1] != null
1228:LVR:0:POS:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:0 |==> 1
1229:LVR:0:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:0 |==> -1
1230:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:1 |==> 0
1231:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:1 |==> -1
1232:LVR:0:POS:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:0 |==> 1
1233:LVR:0:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:0 |==> -1
1234:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2684:pushString(null, (char)0 + (String)attribute[1] + (char)0) |==> <NO-OP>
1235:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:4 |==> 0
1236:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:4 |==> -4
1237:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:LIT_NORMALIZE | LIT_CHAR_REF |==> LIT_NORMALIZE & LIT_CHAR_REF
1238:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:LIT_NORMALIZE | LIT_CHAR_REF |==> LIT_NORMALIZE ^ LIT_CHAR_REF
1239:LOR:|(int,int):&(int,int):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:LIT_NORMALIZE | LIT_CHAR_REF | LIT_ENTITY_REF |==> (LIT_NORMALIZE | LIT_CHAR_REF) & LIT_ENTITY_REF
1240:LOR:|(int,int):^(int,int):com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:LIT_NORMALIZE | LIT_CHAR_REF | LIT_ENTITY_REF |==> (LIT_NORMALIZE | LIT_CHAR_REF) ^ LIT_ENTITY_REF
1241:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2685:attribute[4] = readLiteral(LIT_NORMALIZE | LIT_CHAR_REF | LIT_ENTITY_REF) |==> <NO-OP>
1242:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2690:4 |==> 0
1243:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeExpandedValue(java.lang.String,java.lang.String):2690:4 |==> -4
1244:EVR:<METHOD_INVOCATION(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeDefaultValueType(java.lang.String,java.lang.String):2703:getAttribute(name, aname) |==> null
1245:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttributeDefaultValueType(java.lang.String,java.lang.String):2704:attribute == null |==> false
1246:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getAttributeDefaultValueType(java.lang.String,java.lang.String):2705:ATTRIBUTE_DEFAULT_UNDECLARED |==> 0
1247:LVR:POS:0:com.microstar.xml.XmlParser@getAttributeDefaultValueType(java.lang.String,java.lang.String):2707:2 |==> 0
1248:LVR:POS:NEG:com.microstar.xml.XmlParser@getAttributeDefaultValueType(java.lang.String,java.lang.String):2707:2 |==> -2
1249:EVR:<METHOD_INVOCATION(java.util.Hashtable)>:<DEFAULT>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2728:getElementAttributes(elName) |==> null
1250:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2729:attlist == null |==> false
1251:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2730:attlist = new Hashtable() |==> <NO-OP>
1252:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2735:attlist.get(name) != null |==> true
1253:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2736:return; |==> <NO-OP>
1254:LVR:POS:0:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2738:5 |==> 0
1255:LVR:POS:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2738:5 |==> -5
1256:LVR:0:POS:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2739:0 |==> 1
1257:LVR:0:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2739:0 |==> -1
1258:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2739:attribute[0] = new Integer(type) |==> <NO-OP>
1259:LVR:POS:0:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2740:1 |==> 0
1260:LVR:POS:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2740:1 |==> -1
1261:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2740:attribute[1] = value |==> <NO-OP>
1262:LVR:POS:0:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2741:2 |==> 0
1263:LVR:POS:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2741:2 |==> -2
1264:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2741:attribute[2] = new Integer(valueType) |==> <NO-OP>
1265:LVR:POS:0:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2742:3 |==> 0
1266:LVR:POS:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2742:3 |==> -3
1267:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2742:attribute[3] = enumeration |==> <NO-OP>
1268:LVR:POS:0:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2743:4 |==> 0
1269:LVR:POS:NEG:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2743:4 |==> -4
1270:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2743:attribute[4] = null |==> <NO-OP>
1271:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2744:attlist.put(name.intern(), attribute) |==> <NO-OP>
1272:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int):2748:setElement(elName, CONTENT_UNDECLARED, null, attlist) |==> <NO-OP>
1273:EVR:<METHOD_INVOCATION(java.util.Hashtable)>:<DEFAULT>:com.microstar.xml.XmlParser@getAttribute(java.lang.String,java.lang.String):2762:getElementAttributes(elName) |==> null
1274:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getAttribute(java.lang.String,java.lang.String):2763:attlist == null |==> false
1275:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@getAttribute(java.lang.String,java.lang.String):2764:return null; |==> <NO-OP>
1276:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttribute(java.lang.String,java.lang.String):2767:(Object[])attlist.get(name) |==> null
1277:EVR:<IDENTIFIER(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getAttribute(java.lang.String,java.lang.String):2768:attribute |==> null
1278:EVR:<METHOD_INVOCATION(java.util.Enumeration)>:<DEFAULT>:com.microstar.xml.XmlParser@declaredEntities():2789:entityInfo.keys() |==> null
1279:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getEntityType(java.lang.String):2803:(Object[])entityInfo.get(ename) |==> null
1280:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getEntityType(java.lang.String):2804:entity == null |==> false
1281:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getEntityType(java.lang.String):2805:ENTITY_UNDECLARED |==> 0
1282:LVR:0:POS:com.microstar.xml.XmlParser@getEntityType(java.lang.String):2807:0 |==> 1
1283:LVR:0:NEG:com.microstar.xml.XmlParser@getEntityType(java.lang.String):2807:0 |==> -1
1284:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getEntityPublicId(java.lang.String):2823:(Object[])entityInfo.get(ename) |==> null
1285:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getEntityPublicId(java.lang.String):2824:entity == null |==> false
1286:LVR:POS:0:com.microstar.xml.XmlParser@getEntityPublicId(java.lang.String):2827:1 |==> 0
1287:LVR:POS:NEG:com.microstar.xml.XmlParser@getEntityPublicId(java.lang.String):2827:1 |==> -1
1288:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getEntitySystemId(java.lang.String):2842:(Object[])entityInfo.get(ename) |==> null
1289:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getEntitySystemId(java.lang.String):2843:entity == null |==> false
1290:LVR:POS:0:com.microstar.xml.XmlParser@getEntitySystemId(java.lang.String):2846:2 |==> 0
1291:LVR:POS:NEG:com.microstar.xml.XmlParser@getEntitySystemId(java.lang.String):2846:2 |==> -2
1292:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getEntityValue(java.lang.String):2860:(Object[])entityInfo.get(ename) |==> null
1293:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getEntityValue(java.lang.String):2861:entity == null |==> false
1294:LVR:POS:0:com.microstar.xml.XmlParser@getEntityValue(java.lang.String):2864:3 |==> 0
1295:LVR:POS:NEG:com.microstar.xml.XmlParser@getEntityValue(java.lang.String):2864:3 |==> -3
1296:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getEntityNotationName(java.lang.String):2879:(Object[])entityInfo.get(eName) |==> null
1297:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getEntityNotationName(java.lang.String):2880:entity == null |==> false
1298:LVR:POS:0:com.microstar.xml.XmlParser@getEntityNotationName(java.lang.String):2883:4 |==> 0
1299:LVR:POS:NEG:com.microstar.xml.XmlParser@getEntityNotationName(java.lang.String):2883:4 |==> -4
1300:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setInternalEntity(java.lang.String,java.lang.String):2893:setEntity(eName, ENTITY_INTERNAL, null, null, value, null) |==> <NO-OP>
1301:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setExternalDataEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String):2903:setEntity(eName, ENTITY_NDATA, pubid, sysid, null, nName) |==> <NO-OP>
1302:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setExternalTextEntity(java.lang.String,java.lang.String,java.lang.String):2912:setEntity(eName, ENTITY_TEXT, pubid, sysid, null, null) |==> <NO-OP>
1303:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2925:entityInfo.get(eName) == null |==> false
1304:LVR:POS:0:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2926:5 |==> 0
1305:LVR:POS:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2926:5 |==> -5
1306:LVR:0:POS:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2927:0 |==> 1
1307:LVR:0:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2927:0 |==> -1
1308:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2927:entity[0] = new Integer(eClass) |==> <NO-OP>
1309:LVR:POS:0:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2928:1 |==> 0
1310:LVR:POS:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2928:1 |==> -1
1311:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2928:entity[1] = pubid |==> <NO-OP>
1312:LVR:POS:0:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2929:2 |==> 0
1313:LVR:POS:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2929:2 |==> -2
1314:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2929:entity[2] = sysid |==> <NO-OP>
1315:LVR:POS:0:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2930:3 |==> 0
1316:LVR:POS:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2930:3 |==> -3
1317:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2930:entity[3] = value |==> <NO-OP>
1318:LVR:POS:0:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2931:4 |==> 0
1319:LVR:POS:NEG:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2931:4 |==> -4
1320:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2931:entity[4] = nName |==> <NO-OP>
1321:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):2933:entityInfo.put(eName, entity) |==> <NO-OP>
1322:EVR:<METHOD_INVOCATION(java.util.Enumeration)>:<DEFAULT>:com.microstar.xml.XmlParser@declaredNotations():2952:notationInfo.keys() |==> null
1323:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getNotationPublicId(java.lang.String):2968:(Object[])notationInfo.get(nname) |==> null
1324:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getNotationPublicId(java.lang.String):2969:notation == null |==> false
1325:LVR:0:POS:com.microstar.xml.XmlParser@getNotationPublicId(java.lang.String):2972:0 |==> 1
1326:LVR:0:NEG:com.microstar.xml.XmlParser@getNotationPublicId(java.lang.String):2972:0 |==> -1
1327:EVR:<TYPE_CAST(java.lang.Object[])>:<DEFAULT>:com.microstar.xml.XmlParser@getNotationSystemId(java.lang.String):2988:(Object[])notationInfo.get(nname) |==> null
1328:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@getNotationSystemId(java.lang.String):2989:notation == null |==> false
1329:LVR:POS:0:com.microstar.xml.XmlParser@getNotationSystemId(java.lang.String):2992:1 |==> 0
1330:LVR:POS:NEG:com.microstar.xml.XmlParser@getNotationSystemId(java.lang.String):2992:1 |==> -1
1331:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3008:notationInfo.get(nname) == null |==> false
1332:LVR:POS:0:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3009:2 |==> 0
1333:LVR:POS:NEG:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3009:2 |==> -2
1334:LVR:0:POS:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3010:0 |==> 1
1335:LVR:0:NEG:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3010:0 |==> -1
1336:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3010:notation[0] = pubid |==> <NO-OP>
1337:LVR:POS:0:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3011:1 |==> 0
1338:LVR:POS:NEG:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3011:1 |==> -1
1339:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3011:notation[1] = sysid |==> <NO-OP>
1340:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3012:notationInfo.put(nname, notation) |==> <NO-OP>
1341:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@setNotation(java.lang.String,java.lang.String,java.lang.String):3014:error("multiple declarations of notation", nname, null) |==> <NO-OP>
1342:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getLineNumber():3029:line |==> 0
1343:EVR:<IDENTIFIER(int)>:<DEFAULT>:com.microstar.xml.XmlParser@getColumnNumber():3038:column |==> 0
1344:ROR:>=(int,int):==(int,int):com.microstar.xml.XmlParser@readCh():3075:readBufferPos >= readBufferLength |==> readBufferPos == readBufferLength
1345:ROR:>=(int,int):>(int,int):com.microstar.xml.XmlParser@readCh():3075:readBufferPos >= readBufferLength |==> readBufferPos > readBufferLength
1346:ROR:>=(int,int):TRUE(int,int):com.microstar.xml.XmlParser@readCh():3075:readBufferPos >= readBufferLength |==> true
1347:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3082:readDataChunk() |==> <NO-OP>
1348:LVR:POS:0:com.microstar.xml.XmlParser@readCh():3083:1 |==> 0
1349:LVR:POS:NEG:com.microstar.xml.XmlParser@readCh():3083:1 |==> -1
1350:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@readCh():3083:readBufferLength < 1 |==> readBufferLength != 1
1351:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3083:readBufferLength < 1 |==> readBufferLength <= 1
1352:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3083:readBufferLength < 1 |==> false
1353:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3085:popInput() |==> <NO-OP>
1354:LVR:POS:0:com.microstar.xml.XmlParser@readCh():3086:1 |==> 0
1355:LVR:POS:NEG:com.microstar.xml.XmlParser@readCh():3086:1 |==> -1
1356:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@readCh():3086:readBufferLength < 1 |==> readBufferLength != 1
1357:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3086:readBufferLength < 1 |==> readBufferLength <= 1
1358:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3086:readBufferLength < 1 |==> false
1359:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3088:readDataChunk() |==> <NO-OP>
1360:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3091:break; |==> <NO-OP>
1361:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3094:popInput() |==> <NO-OP>
1362:STD:<BREAK>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3095:break; |==> <NO-OP>
1363:EVR:<ARRAY_ACCESS(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readCh():3099:readBuffer[readBufferPos++] |==> 0
1364:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3108:c == '%' |==> c <= '%'
1365:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readCh():3108:c == '%' |==> c >= '%'
1366:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3108:c == '%' |==> false
1367:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD |==> context <= CONTEXT_DTD
1368:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD |==> context >= CONTEXT_DTD
1369:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD |==> false
1370:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_ENTITYVALUE |==> context <= CONTEXT_ENTITYVALUE
1371:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_ENTITYVALUE |==> context >= CONTEXT_ENTITYVALUE
1372:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_ENTITYVALUE |==> false
1373:COR:||(boolean,boolean):!=(boolean,boolean):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD != (context == CONTEXT_ENTITYVALUE)
1374:COR:||(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_DTD
1375:COR:||(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> context == CONTEXT_ENTITYVALUE
1376:COR:||(boolean,boolean):TRUE(boolean,boolean):com.microstar.xml.XmlParser@readCh():3109:context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE |==> true
1377:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@readCh():3108:c == '%' && (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE) |==> c == '%' == (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE)
1378:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@readCh():3108:c == '%' && (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE) |==> false
1379:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@readCh():3108:c == '%' && (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE) |==> c == '%'
1380:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@readCh():3109:c == '%' && (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE) |==> (context == CONTEXT_DTD || context == CONTEXT_ENTITYVALUE)
1381:EVR:<METHOD_INVOCATION(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readCh():3112:readCh() |==> 0
1382:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3113:unread(c2) |==> <NO-OP>
1383:COR:isWhitespace(c2):TRUE:com.microstar.xml.XmlParser@readCh():3114:isWhitespace(c2) |==> false
1384:COR:isWhitespace(c2):FALSE:com.microstar.xml.XmlParser@readCh():3114:isWhitespace(c2) |==> true
1385:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3116:context == CONTEXT_ENTITYVALUE |==> context <= CONTEXT_ENTITYVALUE
1386:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readCh():3116:context == CONTEXT_ENTITYVALUE |==> context >= CONTEXT_ENTITYVALUE
1387:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3116:context == CONTEXT_ENTITYVALUE |==> false
1388:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3116:parsePEReference(context == CONTEXT_ENTITYVALUE) |==> <NO-OP>
1389:STD:<RETURN>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3117:return readCh(); |==> <NO-OP>
1390:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@readCh():3121:c == '\n' |==> c <= '\n'
1391:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@readCh():3121:c == '\n' |==> c >= '\n'
1392:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@readCh():3121:c == '\n' |==> false
1393:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3123:line++ |==> <NO-OP>
1394:LVR:0:POS:com.microstar.xml.XmlParser@readCh():3124:0 |==> 1
1395:LVR:0:NEG:com.microstar.xml.XmlParser@readCh():3124:0 |==> -1
1396:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3124:column = 0 |==> <NO-OP>
1397:STD:<INC>:<NO-OP>:com.microstar.xml.XmlParser@readCh():3128:column++ |==> <NO-OP>
1398:EVR:<IDENTIFIER(char)>:<DEFAULT>:com.microstar.xml.XmlParser@readCh():3131:c |==> 0
1399:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@unread(char):3154:c == '\n' |==> c <= '\n'
1400:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@unread(char):3154:c == '\n' |==> c >= '\n'
1401:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@unread(char):3154:c == '\n' |==> false
1402:STD:<DEC>:<NO-OP>:com.microstar.xml.XmlParser@unread(char):3156:line-- |==> <NO-OP>
1403:LVR:NEG:0:com.microstar.xml.XmlParser@unread(char):3157:-1 |==> 0
1404:LVR:NEG:POS:com.microstar.xml.XmlParser@unread(char):3157:-1 |==> 1
1405:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@unread(char):3157:column = -1 |==> <NO-OP>
1406:LVR:0:POS:com.microstar.xml.XmlParser@unread(char):3159:0 |==> 1
1407:LVR:0:NEG:com.microstar.xml.XmlParser@unread(char):3159:0 |==> -1
1408:ROR:>(int,int):!=(int,int):com.microstar.xml.XmlParser@unread(char):3159:readBufferPos > 0 |==> readBufferPos != 0
1409:ROR:>(int,int):>=(int,int):com.microstar.xml.XmlParser@unread(char):3159:readBufferPos > 0 |==> readBufferPos >= 0
1410:ROR:>(int,int):FALSE(int,int):com.microstar.xml.XmlParser@unread(char):3159:readBufferPos > 0 |==> false
1411:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@unread(char):3161:readBuffer[--readBufferPos] = c |==> <NO-OP>
1412:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@unread(char):3165:pushString(null, new Character(c).toString()) |==> <NO-OP>
1413:LVR:0:POS:com.microstar.xml.XmlParser@unread(char[],int):3183:0 |==> 1
1414:LVR:0:NEG:com.microstar.xml.XmlParser@unread(char[],int):3183:0 |==> -1
1415:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3183:i < length |==> i != length
1416:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3183:i < length |==> i <= length
1417:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@unread(char[],int):3183:i < length |==> false
1418:ROR:==(int,int):<=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3185:ch[i] == '\n' |==> ch[i] <= '\n'
1419:ROR:==(int,int):>=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3185:ch[i] == '\n' |==> ch[i] >= '\n'
1420:ROR:==(int,int):FALSE(int,int):com.microstar.xml.XmlParser@unread(char[],int):3185:ch[i] == '\n' |==> false
1421:STD:<DEC>:<NO-OP>:com.microstar.xml.XmlParser@unread(char[],int):3186:line-- |==> <NO-OP>
1422:LVR:NEG:0:com.microstar.xml.XmlParser@unread(char[],int):3186:-1 |==> 0
1423:LVR:NEG:POS:com.microstar.xml.XmlParser@unread(char[],int):3186:-1 |==> 1
1424:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@unread(char[],int):3186:column = -1 |==> <NO-OP>
1425:ROR:<(int,int):!=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3188:length < readBufferPos |==> length != readBufferPos
1426:ROR:<(int,int):<=(int,int):com.microstar.xml.XmlParser@unread(char[],int):3188:length < readBufferPos |==> length <= readBufferPos
1427:ROR:<(int,int):FALSE(int,int):com.microstar.xml.XmlParser@unread(char[],int):3188:length < readBufferPos |==> false
1428:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@unread(char[],int):3189:readBufferPos -= length |==> <NO-OP>
1429:LVR:0:POS:com.microstar.xml.XmlParser@unread(char[],int):3192:0 |==> 1
1430:LVR:0:NEG:com.microstar.xml.XmlParser@unread(char[],int):3192:0 |==> -1
1431:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@unread(char[],int):3192:pushCharArray(null, ch, 0, length) |==> <NO-OP>
1432:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@unread(char[],int):3193:sourceType = INPUT_BUFFER |==> <NO-OP>
1433:LVR:FALSE:TRUE:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3220:false |==> true
1434:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3223:pushInput(ename) |==> <NO-OP>
1435:LVR:POS:0:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:4 |==> 0
1436:LVR:POS:NEG:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:4 |==> -4
1437:AOR:+(int,int):%(int,int):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:READ_BUFFER_MAX + 4 |==> READ_BUFFER_MAX % 4
1438:AOR:+(int,int):*(int,int):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:READ_BUFFER_MAX + 4 |==> READ_BUFFER_MAX * 4
1439:AOR:+(int,int):-(int,int):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:READ_BUFFER_MAX + 4 |==> READ_BUFFER_MAX - 4
1440:AOR:+(int,int):/(int,int):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:READ_BUFFER_MAX + 4 |==> READ_BUFFER_MAX / 4
1441:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3227:readBuffer = new char[READ_BUFFER_MAX + 4] |==> <NO-OP>
1442:LVR:0:POS:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3228:0 |==> 1
1443:LVR:0:NEG:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3228:0 |==> -1
1444:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3228:readBufferPos = 0 |==> <NO-OP>
1445:LVR:0:POS:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3229:0 |==> 1
1446:LVR:0:NEG:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3229:0 |==> -1
1447:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3229:readBufferLength = 0 |==> <NO-OP>
1448:LVR:NEG:0:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3230:-1 |==> 0
1449:LVR:NEG:POS:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3230:-1 |==> 1
1450:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3230:readBufferOverflow = -1 |==> <NO-OP>
1451:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3231:is = null |==> <NO-OP>
1452:LVR:POS:0:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3232:1 |==> 0
1453:LVR:POS:NEG:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3232:1 |==> -1
1454:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3232:line = 1 |==> <NO-OP>
1455:LVR:0:POS:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3234:0 |==> 1
1456:LVR:0:NEG:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3234:0 |==> -1
1457:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3234:currentByteCount = 0 |==> <NO-OP>
1458:STD:<CALL>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3237:dataBufferFlush() |==> <NO-OP>
1459:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:systemId != null |==> true
1460:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:externalEntity != null |==> true
1461:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:systemId != null && externalEntity != null |==> systemId != null == (externalEntity != null)
1462:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:systemId != null && externalEntity != null |==> false
1463:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:systemId != null && externalEntity != null |==> systemId != null
1464:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3240:systemId != null && externalEntity != null |==> externalEntity != null
1465:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3241:systemId = new URL(externalEntity.getURL(), systemId).toString() |==> <NO-OP>
1466:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3242:baseURI != null |==> true
1467:STD:<ASSIGN>:<NO-OP>:com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3244:systemId = new URL(new URL(baseURI), systemId).toString() |==> <NO-OP>
1468:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:systemId != null |==> true
1469:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:handler != null |==> true
1470:COR:&&(boolean,boolean):==(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:systemId != null && handler != null |==> systemId != null == (handler != null)
1471:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:systemId != null && handler != null |==> false
1472:COR:&&(boolean,boolean):LHS(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:systemId != null && handler != null |==> systemId != null
1473:COR:&&(boolean,boolean):RHS(boolean,boolean):com.microstar.xml.XmlParser@pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String):3251:systemId != null && handler != null |==> handler != null
