<?xml version="1.0"?>
<project default="docs" name="docs build file">
  <!-- =================================================================== -->
  <!-- Prepares the docs                                                   -->
  <!-- =================================================================== -->
  <target name="prepare-docs">

    <property name="forrest.cent.dir"      value="${cents.dir}/forrest.${cent.dir.suffix}"/> 
    <property name="forrest.cent.work.dir" value="${xlayout.build.work.dir}/forrest"/> 
    
    <!-- define filters --> 
    <filter token="skin"              value="${centipede.tools.cents.forrest.skin.name}"/>
    <filter token="link1"             value="${centipede.tools.cents.forrest.skin.navlinks.link1}"/>
    <filter token="link1.href"        value="${centipede.tools.cents.forrest.skin.navlinks.link1.href}"/>
    <filter token="link2"             value="${centipede.tools.cents.forrest.skin.navlinks.link2}"/>
    <filter token="link2.href"        value="${centipede.tools.cents.forrest.skin.navlinks.link2.href}"/>
    <filter token="link3"             value="${centipede.tools.cents.forrest.skin.navlinks.link3}"/>
    <filter token="link3.href"        value="${centipede.tools.cents.forrest.skin.navlinks.link3.href}"/>
    <filter token="group-logo.src"    value="${centipede.tools.cents.forrest.skin.logo.group.src}"/>
    <filter token="group-logo.href"   value="${centipede.tools.cents.forrest.skin.logo.group.href}"/>
    <filter token="project-logo.src"  value="${centipede.tools.cents.forrest.skin.logo.project.src}"/>                    
    <filter token="project-logo.href" value="${centipede.tools.cents.forrest.skin.logo.project.href}"/>                    
    <filter token="year" value="${YEAR}"/>  
    <filter token="vendor" value="${xgump.module.vendor}"/>  
        

    <mkdir dir="${xlayout.build.documentation.dir}"/>
    <mkdir dir="${forrest.cent.work.dir}"/>


    <!-- make filtered copy of XML docs -->
    <copy todir="${forrest.cent.work.dir}" filtering="on">
      <fileset dir="${xlayout.source.documentation.dir}" casesensitive="no">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

    <!-- make filtered copy of images -->
    <copy todir="${forrest.cent.work.dir}" filtering="off">
      <fileset dir="${xlayout.source.documentation.dir}" casesensitive="no">
        <exclude name="**/*.xml"/>
      </fileset>
    </copy>
 
     <!-- Copy Cocoon configuration and sitemap -->
    <copy todir="${forrest.cent.work.dir}" filtering="on">
      <fileset dir="${forrest.cent.dir}/conf"/>
    </copy>

     <!-- Copy Cocoon xml resources -->
    <copy todir="${forrest.cent.work.dir}" filtering="on">
      <fileset dir="${forrest.cent.dir}/resources">
        <include name="**/*.x*"/>
      </fileset>
    </copy>

     <!-- Copy Cocoon resources -->
    <copy todir="${forrest.cent.work.dir}" filtering="off">
      <fileset dir="${forrest.cent.dir}/resources">
        <exclude name="**/*.xml"/>
      </fileset>
    </copy>
        
     <!-- Copy xdocs -->
    <mkdir dir="${forrest.cent.work.dir}/content/xdocs"/>
    <copy todir="${forrest.cent.work.dir}/content/xdocs" filtering="on">
      <fileset dir="${xlayout.source.documentation.content.xdocs.dir}">
        <exclude name="*.htm*"/>
      </fileset>
    </copy>

  
    <!-- Copy images -->
    <mkdir dir="${forrest.cent.work.dir}/resources/images"/>
    <copy todir="${forrest.cent.work.dir}/resources/images" filtering="off">
      <fileset dir="${xlayout.source.documentation.resources.images.dir}"/>
    </copy>
               
    <!-- Setup entity catalog and entities -->
    <mkdir dir="${forrest.cent.work.dir}/WEB-INF/classes"/>
    <mkdir dir="${forrest.cent.work.dir}/WEB-INF/lib"/>
    <move todir="${forrest.cent.work.dir}/WEB-INF/classes">
      <fileset dir="${forrest.cent.work.dir}/resources/schema">
        <include name="CatalogManager.properties"/>
      </fileset>
    </move>
    
  </target>

  <!-- =================================================================== -->
  <!-- Clean generated docs dir.                                           -->
  <!-- =================================================================== -->
  <target name="clean-docs" description="* Cleans the build docs directories">
    <delete dir="${forrest.cent.work.dir}"/>
    <delete dir="${xlayout.build.documentation.dir}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Clean generated docs dir.                                           -->
  <!-- =================================================================== -->
  <target name="cleandocs" description="Deprecated: use clean-docs." depends="clean-docs">
    <echo message="cleandocs DEPRECATED. use clean-docs"/>
  </target>

  <!-- =================================================================== -->
  <!-- Validate xml                                                        -->
  <!-- =================================================================== -->
  <target name="validate-docs" description="* Cleans the build docs directories">
    <xmlvalidate failonerror="yes" lenient="yes" warn="yes" 
       className="org.apache.xerces.parsers.SAXParser">
     
       <classpath>      
        <fileset dir="${xlayout.library.endorsed.dir}"> 
          <include name="*.jar"/>
         </fileset>
       </classpath>
         
       <fileset dir="${xlayout.source.documentation.content.xdocs.dir}" 
                includes="**.x*"/>  
       <fileset dir="." 
                includes="*.x*" excludes="build.xml"/>  
                       
     </xmlvalidate>
  </target>
  
  <target name="making-docs">
    <echo message="-------------------------------------------------------------"/>
    <echo message="  Building docs, please stand by ..."/>
  </target>
  
  <!-- =================================================================== -->
  <!-- The documentation system                                            -->
  <!-- =================================================================== -->
  <target name="owdocs"
          depends="prepare-docs, making-docs"
          description="* Generates the documentation">

    <java classname="org.apache.cocoon.Main" fork="true" dir="${forrest.cent.work.dir}" failonerror="true">
      <arg value="-c."/>
      <arg value="-d../../../${xlayout.build.documentation.dir}"/>
      <arg value="-w."/>
      <arg value="-l./cocoon.log"/>
      <arg value="-uINFO"/>
      <arg value="index.html"/>
      <classpath>
       <fileset dir="${xlayout.library.endorsed.dir}"> 
          <include name="*.jar"/>
       </fileset>      
       <fileset dir="." casesensitive="yes"> 
        <patternset>
         <include name="${cents.dir}/*.${cent.dir.suffix}/${cent.lib.dir.name}/*.jar"/>
        </patternset>
       </fileset>  
       <pathelement location="${tools.jar}"/>
       <pathelement location="${forrest.cent.work.dir}/WEB-INF/classes"/>
       <fileset dir="${forrest.cent.work.dir}/WEB-INF/lib">
         <include name="*.jar"/>
       </fileset>
     </classpath>
    </java>

    <echo message="  ...docs generated succesfully in ${xlayout.build.documentation.dir}."/>
    <echo message="-------------------------------------------------------------"/>
    
  </target>
  
  <!-- =================================================================== -->
  <!-- The documentation system                                            -->
  <!-- =================================================================== -->
  <target name="docs"
          depends="clean-docs, owdocs"
          description="Cleans docs and generates the documentation">

  </target>
    


</project>  
